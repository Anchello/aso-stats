{"version":3,"sources":["constants/index.ts","services/stats.ts","components/StatsTable.tsx","components/Modal.tsx","containers/StatsContainer.tsx","helpers/index.tsx","containers/Routing.tsx","containers/App.tsx","index.tsx"],"names":["DATA_STATS_URL","process","COLORS","settings","headers","Accept","method","getStats","url","fetch","then","response","ok","console","error","status","statusText","json","api","data","map","item","keyword","suggestions_count","users_per_day","position_info","total_apps","color","id","position","change","explore","suggestions","trafficScore","rank","totalApps","adaptedDataStats","StatsTable","columns","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","className","headerGroup","getHeaderGroupProps","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","Modal","children","title","open","useState","isOpen","setIsOpen","handleClose","useCallback","useEffect","type","onClick","Loader","StatsContainer","setData","dataRes","handleClickShowPopup","handleClickDelete","index","length","splice","updateDataTable","useMemo","onClickDelete","onClickShow","Header","Cell","accessor","value","to","pathname","search","encodeURIComponent","style","backgroundColor","Routing","exact","path","component","App","basename","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59b3a097.chunk.js","sourcesContent":["const SERVER_URL = process.env.REACT_APP_API_URL;\nconst DATA_STATS_URL = `${SERVER_URL}/demo/keyword-analytics/data-stats`;\nconst PROXY_URL = 'https://cors-anywhere.herokuapp.com/';\n\nconst INDEX_PATH = '/';\nconst STATS_PATH = '/stats/';\nconst EXPLORE_PATH = '/explore';\n\nconst COLORS = ['cyan', 'green', 'yellow', 'white', 'red', 'purple'];\n\nexport {\n  PROXY_URL,\n  DATA_STATS_URL, INDEX_PATH,\n  STATS_PATH, EXPLORE_PATH, COLORS,\n};\n","import { PROXY_URL, DATA_STATS_URL } from '../constants';\n\nfunction api<T>(url: string, settings: object): Promise<T> {\n  return fetch(url, settings)\n    .then((response) => {\n      if (!response.ok) {\n        // eslint-disable-next-line @typescript-eslint/no-throw-literal\n        throw console.error(`${response.status}: ${response.statusText}`);\n      }\n      return response.json() as Promise<T>;\n    });\n}\n\nconst settings = {\n  headers: {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  },\n  method: 'POST',\n};\n\nexport interface IData {\n  keyword: string;\n  explore: string;\n  suggestions: number;\n  trafficScore: number\n  rank: string;\n  totalApps: number;\n  color: number;\n  id: number;\n}\n\nconst adaptedDataStats = (data: Array<any>): any => data.map((item: any) => {\n  const {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    keyword, suggestions_count, users_per_day, position_info, total_apps, color, id,\n  } = item;\n  const { position, change } = position_info;\n  const rank = change !== null ? `${position} (${change})` : position;\n  return {\n    keyword,\n    explore: keyword,\n    suggestions: suggestions_count,\n    trafficScore: users_per_day,\n    rank,\n    totalApps: total_apps,\n    color,\n    id,\n  };\n});\n\nexport const getStats = () => api<{data: Array<any>}>(`${PROXY_URL}${DATA_STATS_URL}`, settings)\n  .then(({ data }) => adaptedDataStats(data));\n","import React from 'react';\nimport { useTable, Column } from 'react-table';\n\nimport './StatsTable.scss';\n\ninterface IStatsTableProps {\n  columns: Column<object>[];\n  data: Array<any>;\n}\n\nconst StatsTable: React.FC<IStatsTableProps> = ({ columns, data }) => {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({\n    columns,\n    data,\n  });\n\n  return (\n    // eslint-disable-next-line react/jsx-props-no-spreading\n    <table {...getTableProps()} className=\"stats-table\">\n      <thead className=\"stats-table__header\">\n        {headerGroups.map((headerGroup) => (\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              // eslint-disable-next-line react/jsx-props-no-spreading\n              <th className=\"stats-table__cell\" {...column.getHeaderProps()}>{column.render('Header')}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row) => {\n          prepareRow(row);\n          return (\n            // eslint-disable-next-line react/jsx-props-no-spreading\n            <tr {...row.getRowProps()}>\n              {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n              {row.cells.map((cell) => <td className=\"stats-table__cell\" {...cell.getCellProps()}>{cell.render('Cell')}</td>)}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default StatsTable;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport './Modal.scss';\n\ninterface IModalProps {\n  children: React.ReactNode;\n  open: boolean;\n  title?: string;\n}\n\nconst Modal:React.FC<IModalProps> = ({ children, title = '', open }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const handleClose = useCallback(() => {\n    setIsOpen(!isOpen);\n  }, [isOpen]);\n\n  useEffect(() => {\n    setIsOpen(open);\n  }, [open]);\n\n  if (!isOpen) return null;\n  return (\n    <div className=\"modal-wrapper\">\n      <div className=\"modal\">\n        <button type=\"button\" className=\"modal__close\" onClick={handleClose}>\n          <span className=\"modal__close-line\" />\n          <span className=\"modal__close-line\" />\n        </button>\n        {title && (\n        <h2 className=\"modal__header\">\n          {title}\n        </h2>\n        )}\n        <div className=\"modal__content\">\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, {\n  useCallback, useEffect, useMemo, useState,\n} from 'react';\nimport { getStats, IData } from '../services/stats';\nimport StatsTable from '../components/StatsTable';\nimport Modal from '../components/Modal';\nimport { generateColumns, updateDataTable } from '../helpers';\n\nconst Loader = () => <div className=\"loader\">Loading...</div>;\n\nconst StatsContainer:React.FC = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [data, setData] = useState<IData[] | []>([]);\n  useEffect(() => {\n    getStats().then((dataRes: IData[]) => {\n      setData(dataRes);\n    });\n  }, []);\n\n  const handleClickShowPopup = useCallback(() => {\n    setIsOpen(true);\n  }, []);\n\n  const handleClickDelete = useCallback((index) => {\n    setData(updateDataTable(data, index));\n  }, [data]);\n\n  const columns = useMemo(\n    () => generateColumns(handleClickDelete, handleClickShowPopup),\n    [handleClickDelete, handleClickShowPopup],\n  );\n\n  return (\n    <>\n      {!data.length ? <Loader /> : <StatsTable columns={columns} data={data} />}\n      <Modal open={isOpen}>Show popup</Modal>\n    </>\n  );\n};\n\nexport default StatsContainer;\n","import { CellProps } from 'react-table';\nimport { Link } from 'react-router-dom';\nimport React from 'react';\nimport { COLORS, EXPLORE_PATH } from '../constants';\nimport { IData } from '../services/stats';\n\nconst generateColumns = (onClickDelete: any, onClickShow: any) => [\n  {\n    Header: '',\n    id: 'checkbox',\n    Cell: () => (\n      <input type=\"checkbox\" />\n    ),\n  },\n  {\n    Header: 'Keyword',\n    accessor: 'keyword',\n  },\n  {\n    Header: '',\n    id: 'explore',\n    accessor: 'explore',\n    Cell: ({ cell: { value } }: CellProps<object>) => (\n      <Link\n        className=\"button\"\n        to={{\n          pathname: EXPLORE_PATH,\n          search: `?keyword=${encodeURIComponent(value)}`,\n        }}\n      >\n        Explore\n      </Link>\n    ),\n  },\n  {\n    Header: 'Show',\n    id: 'suggestions',\n    accessor: 'suggestions',\n    Cell: ({ cell: { value } }: CellProps<object>) => (\n      <button\n        type=\"button\"\n        className=\"button\"\n        onClick={() => {\n          onClickShow();\n        }}\n      >\n        {`Show (${value})`}\n      </button>\n    ),\n  },\n  {\n    Header: 'Traffic Score',\n    accessor: 'trafficScore',\n  }, {\n    Header: 'Rank',\n    accessor: 'rank',\n  }, {\n    Header: 'Total Apps',\n    accessor: 'totalApps',\n  }, {\n    Header: 'Color',\n    accessor: 'color',\n    Cell: ({ cell: { value } }: CellProps<object>) => (\n      <span style={{ backgroundColor: COLORS[value] }} className=\"color\" />\n    ),\n  },\n  {\n    Header: '',\n    id: 'delete',\n    accessor: 'id',\n    Cell: ({ cell }: CellProps<object>) => (\n      <button\n        type=\"button\"\n        className=\"button\"\n        onClick={() => {\n          onClickDelete(cell.row.index);\n        }}\n      >\n        Delete\n      </button>\n    ),\n  },\n];\n\nconst updateDataTable = (data: IData[], index: number): IData[] => {\n  if (!data.length) return [];\n  data.splice(index, 1);\n\n  return [...data];\n};\n\nexport {\n  generateColumns,\n  updateDataTable,\n};\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { INDEX_PATH, STATS_PATH } from '../constants';\nimport StatsContainer from './StatsContainer';\n\nconst Routing:React.FC = () => (\n  <main>\n    <Route exact path={INDEX_PATH} render={() => <Redirect to={STATS_PATH} />} />\n    <Route path={STATS_PATH} component={StatsContainer} />\n  </main>\n);\n\nexport default Routing;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Routing from './Routing';\n\nconst App:React.FC = () => (\n  <BrowserRouter basename={`${process.env.PUBLIC_URL}/`}>\n    <Routing />\n  </BrowserRouter>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './containers/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}