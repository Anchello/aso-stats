{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/react-table/index.js","../../src/publicUtils.js","../../src/utils.js","../../src/makeDefaultPluginHooks.js","../../src/hooks/useColumnVisibility.js","../../src/hooks/useTable.js","../../src/plugin-hooks/useExpanded.js","../../src/filterTypes.js","../../src/plugin-hooks/useFilters.js","../../src/plugin-hooks/useGlobalFilter.js","../../src/aggregations.js","../../src/plugin-hooks/useGroupBy.js","../../src/sortTypes.js","../../src/plugin-hooks/useSortBy.js","../../src/plugin-hooks/usePagination.js","../../src/plugin-hooks/_UNSTABLE_usePivotColumns.js","../../src/plugin-hooks/useRowSelect.js","../../src/plugin-hooks/useRowState.js","../../src/plugin-hooks/useColumnOrder.js","../../src/plugin-hooks/useResizeColumns.js","../../src/plugin-hooks/useAbsoluteLayout.js","../../src/plugin-hooks/useBlockLayout.js","../../src/plugin-hooks/useFlexLayout.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","_arrayLikeToArray","arr","len","length","i","arr2","_slicedToArray","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","unsupportedIterableToArray","TypeError","module","exports","require","actions","init","defaultRenderer","emptyRenderer","React","defaultColumn","Cell","width","minWidth","maxWidth","Number","MAX_SAFE_INTEGER","mergeProps","propList","reduce","props","style","className","makePropGetter","hooks","meta","userProps","prev","handlePropGetter","prevProps","reduceHooks","initial","allowUndefined","loopHooks","context","forEach","hook","ensurePluginOrder","plugins","befores","pluginName","afters","findIndex","plugin","before","functionalUpdate","updater","old","useGetLatest","obj","ref","useRef","current","useCallback","safeUseLayoutEffect","document","useLayoutEffect","useEffect","useMountedLayoutEffect","fn","deps","mountedRef","makeRenderer","instance","column","type","Comp","console","info","Error","flexRender","component","proto","getPrototypeOf","isReactComponent","$$typeof","includes","description","linkColumnStructure","columns","parent","depth","map","assignColumnAccessor","flattenColumns","flattenBy","id","accessor","Header","accessorPath","split","path","def","val","cacheKey","JSON","stringify","pathObj","pathObjCache","get","flattenDeep","newArr","String","d","replace","join","reOpenBracket","reCloseBracket","set","cursor","pathPart","e","row","error","assign","decorateColumn","userDefaultColumn","Footer","originalWidth","makeHeaderGroups","allColumns","additionalHeaderProperties","headerGroups","scanColumns","uid","getUID","headerGroup","headers","parentColumns","hasParents","some","newParent","latestParentColumn","reverse","originalId","placeholderOf","Map","getFirstDefined","args","isFunction","a","key","flat","recurse","expandRows","rows","manualExpandedKey","expanded","expandSubRows","expandedRows","handleRow","isExpanded","original","canExpand","subRows","getFilterMethod","filter","userFilterTypes","filterTypes","text","shouldAutoRemoveFilter","autoRemove","unpreparedAccessWarning","passiveSupported","defaultGetTableProps","role","defaultGetTableBodyProps","defaultGetHeaderProps","colSpan","totalVisibleHeaderCount","defaultGetFooterProps","defaultGetHeaderGroupProps","index","defaultGetFooterGroupProps","defaultGetRowProps","defaultGetCellProps","cell","makeDefaultPluginHooks","useOptions","stateReducers","useControlledState","columnsDeps","allColumnsDeps","accessValue","materializedColumns","materializedColumnsDeps","useInstanceAfterData","visibleColumns","visibleColumnsDeps","headerGroupsDeps","useInstanceBeforeDimensions","useInstance","prepareRow","getTableProps","getTableBodyProps","getHeaderGroupProps","getFooterGroupProps","getHeaderProps","getFooterProps","getRowProps","getCellProps","useFinalInstance","resetHiddenColumns","toggleHideColumn","setHiddenColumns","toggleHideAllColumns","useColumnVisibility","getToggleHiddenProps","defaultGetToggleHiddenProps","getToggleHideAllColumnsProps","defaultGetToggleHideAllColumnsProps","reducer","state","hiddenColumns","onChange","toggleHidden","target","checked","isVisible","title","allColumnsHidden","indeterminate","action","previousState","initialState","columnId","handleColumn","parentVisible","subColumn","subHeader","flatHeaders","dispatch","getHooks","autoResetHiddenColumns","getInstance","getAutoResetHiddenColumns","defaultInitialState","defaultColumnInstance","defaultReducer","prevState","defaultGetSubRows","defaultGetRowId","defaultUseControlledState","applyDefaults","getSubRows","getRowId","stateReducer","calculateHeaderWidths","left","sumTotalMinWidth","sumTotalWidth","sumTotalMaxWidth","sumTotalFlexWidth","subHeaders","header","totalLeft","totalMinWidth","totalWidth","totalMaxWidth","totalFlexWidth","Math","min","max","canResize","accessRowsForColumn","data","flatRows","rowsById","accessValueHooks","originalRow","rowIndex","accessRow","parentRows","originalSubRows","cells","values","resetExpanded","toggleRowExpanded","toggleAllRowsExpanded","useExpanded","getToggleAllRowsExpandedProps","defaultGetToggleAllRowsExpandedProps","getToggleRowExpandedProps","defaultGetToggleRowExpandedProps","onClick","isAllRowsExpanded","keys","rowId","setExpanded","exists","shouldExist","paginateExpandedRows","autoResetExpanded","getAutoResetExpanded","Boolean","useMemo","expandedDepth","maxDepth","splitId","preExpandedRows","ids","filterValue","rowValue","toLowerCase","exactText","exactTextCase","includesAll","every","includesSome","includesValue","exact","equals","between","Infinity","temp","resetFilters","setFilter","setAllFilters","useFilters","filters","find","filterMethod","previousfilter","newFilter","manualFilters","defaultCanFilter","disableFilters","autoResetFilters","columnDefaultCanFilter","columnDisableFilters","canFilter","found","filteredFlatRows","filteredRowsById","filterRows","filteredRows","filteredSoFar","preFilteredRows","warn","getAutoResetFilters","preFilteredFlatRows","preFilteredRowsById","resetGlobalFilter","setGlobalFilter","useGlobalFilter","globalFilter","manualGlobalFilter","globalFilterValue","autoResetGlobalFilter","disableGlobalFilter","columnDisableGlobalFilter","filterableColumns","c","globalFilteredRows","globalFilteredFlatRows","globalFilteredRowsById","getAutoResetGlobalFilter","preGlobalFilteredRows","preGlobalFilteredFlatRows","preGlobalFilteredRowsById","sum","aggregatedValues","mid","floor","nums","sort","b","Set","size","emptyArray","emptyObject","resetGroupBy","setGroupBy","toggleGroupBy","useGroupBy","getGroupByToggleProps","defaultGetGroupByToggleProps","groupBy","canGroupBy","persist","resolvedGroupBy","groupByColumns","col","g","nonGroupByColumns","isGrouped","groupedIndex","indexOf","defaultUserAggregations","groupByFn","defaultGroupByFn","manualGroupBy","aggregations","userAggregations","autoResetGroupBy","disableGroupBy","defaultCanGroupBy","defaultColumnGroupBy","defaultGroupBy","columnDisableGroupBy","Aggregated","existingGroupBy","groupedFlatRows","groupedRowsById","onlyGroupedFlatRows","onlyGroupedRowsById","nonGroupedFlatRows","nonGroupedRowsById","groupedRows","groupUpRecursively","parentId","rowGroupsMap","entries","groupByVal","leafRows","groupedValues","leafValues","columnValue","aggregateValue","aggregateValueFn","aggregateFn","aggregate","groupByID","subRow","getAutoResetGroupBy","preGroupedRows","preGroupedFlatRow","preGroupedRowsById","allCells","isPlaceholder","isAggregated","resKey","reSplitAlphaNumeric","compareBasic","getRowValueByColumnID","isNaN","rowA","rowB","aa","shift","bb","an","parseInt","bn","combo","getTime","resetSortBy","setSortBy","toggleSortBy","clearSortBy","sortType","sortDescFirst","useSortBy","getSortByToggleProps","defaultGetSortByToggleProps","isMultiSortEvent","shiftKey","canSort","disableMultiSort","sortBy","sortAction","desc","multi","disableSortRemove","disableMultiRemove","maxMultiSortColCount","existingSortBy","existingIndex","hasDescDefined","newSortBy","splice","orderByFn","defaultOrderByFn","userSortTypes","sortTypes","manualSortBy","defaultCanSort","disableSortBy","autoResetSortBy","defaultColumnCanSort","columnDisableSortBy","columnSort","isSorted","sortedIndex","isSortedDesc","sortedFlatRows","availableSortBy","sortData","sortedData","sortMethod","sortInverted","sortedRows","getAutoResetSortBy","preSortedRows","preSortedFlatRows","funcs","dirs","sortFn","sortInt","resetPage","gotoPage","setPageSize","usePagination","pageSize","pageIndex","pageCount","page","newPageIndex","canNavigate","topRowIndex","autoResetPage","userPageCount","manualPagination","getAutoResetPage","ceil","pageOptions","fill","pageStart","pageEnd","canPreviousPage","canNextPage","previousPage","nextPage","resetPivot","togglePivot","_UNSTABLE_usePivotColumns","getPivotToggleProps","defaultGetPivotToggleProps","defaultPivotColumns","canPivot","pivotColumns","setPivot","resolvedPivot","isPivotSource","uniqueValues","add","materialized","sourceColumns","newMaterialized","buildPivotColumns","pivotFilters","pivotColumn","u","columnGroup","PivotHeader","uniqueValue","isPivotGroup","pivotValue","sourceColumn","isPivoted","autoResetPivot","manaulPivot","disablePivot","defaultCanPivot","defaultColumnPivot","defaultPivot","columnDisablePivot","getAutoResetPivot","resetSelectedRows","toggleAllRowsSelected","toggleRowSelected","toggleAllPageRowsSelected","useRowSelect","getToggleRowSelectedProps","defaultGetToggleRowSelectedProps","getToggleAllRowsSelectedProps","defaultGetToggleAllRowsSelectedProps","getToggleAllPageRowsSelectedProps","defaultGetToggleAllPageRowsSelectedProps","manualRowSelectedKey","isSelected","isSomeSelected","isAllRowsSelected","selectedRowIds","isAllPageRowsSelected","setSelected","selectAll","selectSubRows","newSelectedRowIds","handleRowById","autoResetSelectedRows","selectedFlatRows","getRowIsSelected","allChildrenSelected","someSelected","getAutoResetSelectedRows","defaultInitialRowStateAccessor","defaultInitialCellStateAccessor","setRowState","setCellState","resetRowState","useRowState","initialRowStateAccessor","initialCellStateAccessor","rowState","oldRowState","oldCellState","cellState","autoResetRowState","getAutoResetRowState","setState","resetColumnOrder","setColumnOrder","useColumnOrder","columnOrder","columnOrderCopy","columnsCopy","columnsInOrder","targetColumnId","foundIndex","columnStartResizing","columnResizing","columnDoneResizing","resetResize","useResizeColumns","getResizerProps","defaultGetResizerProps","position","onResizeStart","isTouchEvent","touches","headerIdWidths","leafHeaders","recurseHeader","clientX","round","dispatchMove","clientXPos","dispatchEnd","handlersAndEvents","mouse","moveEvent","moveHandler","upEvent","upHandler","removeEventListener","touch","cancelable","preventDefault","stopPropagation","events","passiveIfSupported","supported","options","window","addEventListener","passive","columnWidth","onMouseDown","onTouchStart","draggable","columnWidths","startX","isResizingColumn","percentageDeltaX","newColumnWidths","headerId","headerWidth","disableResizing","isResizing","autoResetResize","getAutoResetResize","resetResizing","cellStyles","top","useAbsoluteLayout","getRowStyles","totalColumnsWidth","display","boxSizing","useBlockLayout","useFlexLayout","flex","totalColumnsMinWidth","defaultFn","defaultWait","debounceRef","getDefaultFn","getDefaultWait","promise","Promise","resolve","reject","timeout","clearTimeout","setTimeout","instanceRef","userColumns","getStateReducer","s","handler","useReducer","reducerState","allColumnsQueue","initialRows","all","visibleColumnsDep","totalColumnsMaxWidth","render","footerGroups","runtime","Op","hasOwn","hasOwnProperty","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","Context","_invoke","method","arg","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","result","__await","then","unwrapped","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","object","pop","skipTempReset","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","_toConsumableArray","arrayLikeToArray"],"mappings":"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","file":"static/js/3.1f6f4ca5.chunk.js","sourcesContent":["import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/react-table.production.min.js')\n} else {\n  module.exports = require('./dist/react-table.development.js')\n}\n","import React from 'react'\n\nlet renderErr = 'Renderer Error ☝️'\n\nexport const actions = {\n  init: 'init',\n}\n\nexport const defaultRenderer = ({ value = '' }) => value;\nexport const emptyRenderer = () => <>&nbsp;</>;\n\nexport const defaultColumn = {\n  Cell: defaultRenderer,\n  width: 150,\n  minWidth: 0,\n  maxWidth: Number.MAX_SAFE_INTEGER,\n}\n\nfunction mergeProps(...propList) {\n  return propList.reduce((props, next) => {\n    const { style, className, ...rest } = next\n\n    props = {\n      ...props,\n      ...rest,\n    }\n\n    if (style) {\n      props.style = props.style\n        ? { ...(props.style || {}), ...(style || {}) }\n        : style\n    }\n\n    if (className) {\n      props.className = props.className\n        ? props.className + ' ' + className\n        : className\n    }\n\n    if (props.className === '') {\n      delete props.className\n    }\n\n    return props\n  }, {})\n}\n\nfunction handlePropGetter(prevProps, userProps, meta) {\n  // Handle a lambda, pass it the previous props\n  if (typeof userProps === 'function') {\n    return handlePropGetter({}, userProps(prevProps, meta))\n  }\n\n  // Handle an array, merge each item as separate props\n  if (Array.isArray(userProps)) {\n    return mergeProps(prevProps, ...userProps)\n  }\n\n  // Handle an object by default, merge the two objects\n  return mergeProps(prevProps, userProps)\n}\n\nexport const makePropGetter = (hooks, meta = {}) => {\n  return (userProps = {}) =>\n    [...hooks, userProps].reduce(\n      (prev, next) =>\n        handlePropGetter(prev, next, {\n          ...meta,\n          userProps,\n        }),\n      {}\n    )\n}\n\nexport const reduceHooks = (hooks, initial, meta = {}, allowUndefined) =>\n  hooks.reduce((prev, next) => {\n    const nextValue = next(prev, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (!allowUndefined && typeof nextValue === 'undefined') {\n        console.info(next)\n        throw new Error(\n          'React Table: A reducer hook ☝️ just returned undefined! This is not allowed.'\n        )\n      }\n    }\n    return nextValue\n  }, initial)\n\nexport const loopHooks = (hooks, context, meta = {}) =>\n  hooks.forEach(hook => {\n    const nextValue = hook(context, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof nextValue !== 'undefined') {\n        console.info(hook, nextValue)\n        throw new Error(\n          'React Table: A loop-type hook ☝️ just returned a value! This is not allowed.'\n        )\n      }\n    }\n  })\n\nexport function ensurePluginOrder(plugins, befores, pluginName, afters) {\n  if (process.env.NODE_ENV !== 'production' && afters) {\n    throw new Error(\n      `Defining plugins in the \"after\" section of ensurePluginOrder is no longer supported (see plugin ${pluginName})`\n    )\n  }\n  const pluginIndex = plugins.findIndex(\n    plugin => plugin.pluginName === pluginName\n  )\n\n  if (pluginIndex === -1) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`The plugin \"${pluginName}\" was not found in the plugin list!\nThis usually means you need to need to name your plugin hook by setting the 'pluginName' property of the hook function, eg:\n\n  ${pluginName}.pluginName = '${pluginName}'\n`)\n    }\n  }\n\n  befores.forEach(before => {\n    const beforeIndex = plugins.findIndex(\n      plugin => plugin.pluginName === before\n    )\n    if (beforeIndex > -1 && beforeIndex > pluginIndex) {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error(\n          `React Table: The ${pluginName} plugin hook must be placed after the ${before} plugin hook!`\n        )\n      }\n    }\n  })\n}\n\nexport function functionalUpdate(updater, old) {\n  return typeof updater === 'function' ? updater(old) : updater\n}\n\nexport function useGetLatest(obj) {\n  const ref = React.useRef()\n  ref.current = obj\n\n  return React.useCallback(() => ref.current, [])\n}\n\n// SSR has issues with useLayoutEffect still, so use useEffect during SSR\nexport const safeUseLayoutEffect =\n  typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nexport function useMountedLayoutEffect(fn, deps) {\n  const mountedRef = React.useRef(false)\n\n  safeUseLayoutEffect(() => {\n    if (mountedRef.current) {\n      fn()\n    }\n    mountedRef.current = true\n    // eslint-disable-next-line\n  }, deps)\n}\n\nexport function useAsyncDebounce(defaultFn, defaultWait = 0) {\n  const debounceRef = React.useRef({})\n\n  const getDefaultFn = useGetLatest(defaultFn)\n  const getDefaultWait = useGetLatest(defaultWait)\n\n  return React.useCallback(\n    async (...args) => {\n      if (!debounceRef.current.promise) {\n        debounceRef.current.promise = new Promise((resolve, reject) => {\n          debounceRef.current.resolve = resolve\n          debounceRef.current.reject = reject\n        })\n      }\n\n      if (debounceRef.current.timeout) {\n        clearTimeout(debounceRef.current.timeout)\n      }\n\n      debounceRef.current.timeout = setTimeout(async () => {\n        delete debounceRef.current.timeout\n        try {\n          debounceRef.current.resolve(await getDefaultFn()(...args))\n        } catch (err) {\n          debounceRef.current.reject(err)\n        } finally {\n          delete debounceRef.current.promise\n        }\n      }, getDefaultWait())\n\n      return debounceRef.current.promise\n    },\n    [getDefaultFn, getDefaultWait]\n  )\n}\n\nexport function makeRenderer(instance, column, meta = {}) {\n  return (type, userProps = {}) => {\n    const Comp = typeof type === 'string' ? column[type] : type\n\n    if (typeof Comp === 'undefined') {\n      console.info(column)\n      throw new Error(renderErr)\n    }\n\n    return flexRender(Comp, { ...instance, column, ...meta, ...userProps })\n  }\n}\n\nexport function flexRender(Comp, props) {\n  return isReactComponent(Comp) ? <Comp {...props} /> : Comp\n}\n\nfunction isReactComponent(component) {\n  return (\n    isClassComponent(component) ||\n    typeof component === 'function' ||\n    isExoticComponent(component)\n  )\n}\n\nfunction isClassComponent(component) {\n  return (\n    typeof component === 'function' &&\n    (() => {\n      const proto = Object.getPrototypeOf(component)\n      return proto.prototype && proto.prototype.isReactComponent\n    })()\n  )\n}\n\nfunction isExoticComponent(component) {\n  return (\n    typeof component === 'object' &&\n    typeof component.$$typeof === 'symbol' &&\n    ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description)\n  )\n}\n","import { defaultColumn, emptyRenderer } from './publicUtils'\n\n// Find the depth of the columns\nexport function findMaxDepth(columns, depth = 0) {\n  return columns.reduce((prev, curr) => {\n    if (curr.columns) {\n      return Math.max(prev, findMaxDepth(curr.columns, depth + 1))\n    }\n    return depth\n  }, 0)\n}\n\n// Build the visible columns, headers and flat column list\nexport function linkColumnStructure(columns, parent, depth = 0) {\n  return columns.map(column => {\n    column = {\n      ...column,\n      parent,\n      depth,\n    }\n\n    assignColumnAccessor(column)\n\n    if (column.columns) {\n      column.columns = linkColumnStructure(column.columns, column, depth + 1)\n    }\n    return column\n  })\n}\n\nexport function flattenColumns(columns) {\n  return flattenBy(columns, 'columns')\n}\n\nexport function assignColumnAccessor(column) {\n  // First check for string accessor\n  let { id, accessor, Header } = column\n\n  if (typeof accessor === 'string') {\n    id = id || accessor\n    const accessorPath = accessor.split('.')\n    accessor = row => getBy(row, accessorPath)\n  }\n\n  if (!id && typeof Header === 'string' && Header) {\n    id = Header\n  }\n\n  if (!id && column.columns) {\n    console.error(column)\n    throw new Error('A column ID (or unique \"Header\" value) is required!')\n  }\n\n  if (!id) {\n    console.error(column)\n    throw new Error('A column ID (or string accessor) is required!')\n  }\n\n  Object.assign(column, {\n    id,\n    accessor,\n  })\n\n  return column\n}\n\nexport function decorateColumn(column, userDefaultColumn) {\n  if (!userDefaultColumn) {\n    throw new Error()\n  }\n  Object.assign(column, {\n    // Make sure there is a fallback header, just in case\n    Header: emptyRenderer,\n    Footer: emptyRenderer,\n    ...defaultColumn,\n    ...userDefaultColumn,\n    ...column,\n  })\n\n  Object.assign(column, {\n    originalWidth: column.width,\n  })\n\n  return column\n}\n\n// Build the header groups from the bottom up\nexport function makeHeaderGroups(\n  allColumns,\n  defaultColumn,\n  additionalHeaderProperties = () => ({})\n) {\n  const headerGroups = []\n\n  let scanColumns = allColumns\n\n  let uid = 0\n  const getUID = () => uid++\n\n  while (scanColumns.length) {\n    // The header group we are creating\n    const headerGroup = {\n      headers: [],\n    }\n\n    // The parent columns we're going to scan next\n    const parentColumns = []\n\n    const hasParents = scanColumns.some(d => d.parent)\n\n    // Scan each column for parents\n    scanColumns.forEach(column => {\n      // What is the latest (last) parent column?\n      let latestParentColumn = [...parentColumns].reverse()[0]\n\n      let newParent\n\n      if (hasParents) {\n        // If the column has a parent, add it if necessary\n        if (column.parent) {\n          newParent = {\n            ...column.parent,\n            originalId: column.parent.id,\n            id: `${column.parent.id}_${getUID()}`,\n            headers: [column],\n            ...additionalHeaderProperties(column),\n          }\n        } else {\n          // If other columns have parents, we'll need to add a place holder if necessary\n          const originalId = `${column.id}_placeholder`\n          newParent = decorateColumn(\n            {\n              originalId,\n              id: `${column.id}_placeholder_${getUID()}`,\n              placeholderOf: column,\n              headers: [column],\n              ...additionalHeaderProperties(column),\n            },\n            defaultColumn\n          )\n        }\n\n        // If the resulting parent columns are the same, just add\n        // the column and increment the header span\n        if (\n          latestParentColumn &&\n          latestParentColumn.originalId === newParent.originalId\n        ) {\n          latestParentColumn.headers.push(column)\n        } else {\n          parentColumns.push(newParent)\n        }\n      }\n\n      headerGroup.headers.push(column)\n    })\n\n    headerGroups.push(headerGroup)\n\n    // Start scanning the parent columns\n    scanColumns = parentColumns\n  }\n\n  return headerGroups.reverse()\n}\n\nconst pathObjCache = new Map()\n\nexport function getBy(obj, path, def) {\n  if (!path) {\n    return obj\n  }\n  const cacheKey = typeof path === 'function' ? path : JSON.stringify(path)\n\n  const pathObj =\n    pathObjCache.get(cacheKey) ||\n    (() => {\n      const pathObj = makePathArray(path)\n      pathObjCache.set(cacheKey, pathObj)\n      return pathObj\n    })()\n\n  let val\n\n  try {\n    val = pathObj.reduce((cursor, pathPart) => cursor[pathPart], obj)\n  } catch (e) {\n    // continue regardless of error\n  }\n  return typeof val !== 'undefined' ? val : def\n}\n\nexport function getFirstDefined(...args) {\n  for (let i = 0; i < args.length; i += 1) {\n    if (typeof args[i] !== 'undefined') {\n      return args[i]\n    }\n  }\n}\n\nexport function getElementDimensions(element) {\n  const rect = element.getBoundingClientRect()\n  const style = window.getComputedStyle(element)\n  const margins = {\n    left: parseInt(style.marginLeft),\n    right: parseInt(style.marginRight),\n  }\n  const padding = {\n    left: parseInt(style.paddingLeft),\n    right: parseInt(style.paddingRight),\n  }\n  return {\n    left: Math.ceil(rect.left),\n    width: Math.ceil(rect.width),\n    outerWidth: Math.ceil(\n      rect.width + margins.left + margins.right + padding.left + padding.right\n    ),\n    marginLeft: margins.left,\n    marginRight: margins.right,\n    paddingLeft: padding.left,\n    paddingRight: padding.right,\n    scrollWidth: element.scrollWidth,\n  }\n}\n\nexport function isFunction(a) {\n  if (typeof a === 'function') {\n    return a\n  }\n}\n\nexport function flattenBy(arr, key) {\n  const flat = []\n\n  const recurse = arr => {\n    arr.forEach(d => {\n      if (!d[key]) {\n        flat.push(d)\n      } else {\n        recurse(d[key])\n      }\n    })\n  }\n\n  recurse(arr)\n\n  return flat\n}\n\nexport function expandRows(\n  rows,\n  { manualExpandedKey, expanded, expandSubRows = true }\n) {\n  const expandedRows = []\n\n  const handleRow = row => {\n    row.isExpanded =\n      (row.original && row.original[manualExpandedKey]) || expanded[row.id]\n\n    row.canExpand = row.subRows && !!row.subRows.length\n\n    expandedRows.push(row)\n\n    if (expandSubRows && row.subRows && row.subRows.length && row.isExpanded) {\n      row.subRows.forEach(handleRow)\n    }\n  }\n\n  rows.forEach(handleRow)\n\n  return expandedRows\n}\n\nexport function getFilterMethod(filter, userFilterTypes, filterTypes) {\n  return (\n    isFunction(filter) ||\n    userFilterTypes[filter] ||\n    filterTypes[filter] ||\n    filterTypes.text\n  )\n}\n\nexport function shouldAutoRemoveFilter(autoRemove, value, column) {\n  return autoRemove ? autoRemove(value, column) : typeof value === 'undefined'\n}\n\nexport function unpreparedAccessWarning() {\n  throw new Error(\n    'React-Table: You have not called prepareRow(row) one or more rows you are attempting to render.'\n  )\n}\n\nlet passiveSupported = null\nexport function passiveEventSupported() {\n  // memoize support to avoid adding multiple test events\n  if (typeof passiveSupported === 'boolean') return passiveSupported\n\n  let supported = false\n  try {\n    const options = {\n      get passive() {\n        supported = true\n        return false\n      },\n    }\n\n    window.addEventListener('test', null, options)\n    window.removeEventListener('test', null, options)\n  } catch (err) {\n    supported = false\n  }\n  passiveSupported = supported\n  return passiveSupported\n}\n\n//\n\nconst reOpenBracket = /\\[/g\nconst reCloseBracket = /\\]/g\n\nfunction makePathArray(obj) {\n  return (\n    flattenDeep(obj)\n      // remove all periods in parts\n      .map(d => String(d).replace('.', '_'))\n      // join parts using period\n      .join('.')\n      // replace brackets with periods\n      .replace(reOpenBracket, '.')\n      .replace(reCloseBracket, '')\n      // split it back out on periods\n      .split('.')\n  )\n}\n\nfunction flattenDeep(arr, newArr = []) {\n  if (!Array.isArray(arr)) {\n    newArr.push(arr)\n  } else {\n    for (let i = 0; i < arr.length; i += 1) {\n      flattenDeep(arr[i], newArr)\n    }\n  }\n  return newArr\n}\n","const defaultGetTableProps = props => ({\n  role: 'table',\n  ...props,\n})\n\nconst defaultGetTableBodyProps = props => ({\n  role: 'rowgroup',\n  ...props,\n})\n\nconst defaultGetHeaderProps = (props, { column }) => ({\n  key: `header_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  role: 'columnheader',\n  ...props,\n})\n\nconst defaultGetFooterProps = (props, { column }) => ({\n  key: `footer_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  ...props,\n})\n\nconst defaultGetHeaderGroupProps = (props, { index }) => ({\n  key: `headerGroup_${index}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetFooterGroupProps = (props, { index }) => ({\n  key: `footerGroup_${index}`,\n  ...props,\n})\n\nconst defaultGetRowProps = (props, { row }) => ({\n  key: `row_${row.id}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetCellProps = (props, { cell }) => ({\n  key: `cell_${cell.row.id}_${cell.column.id}`,\n  role: 'cell',\n  ...props,\n})\n\nexport default function makeDefaultPluginHooks() {\n  return {\n    useOptions: [],\n    stateReducers: [],\n    useControlledState: [],\n    columns: [],\n    columnsDeps: [],\n    allColumns: [],\n    allColumnsDeps: [],\n    accessValue: [],\n    materializedColumns: [],\n    materializedColumnsDeps: [],\n    useInstanceAfterData: [],\n    visibleColumns: [],\n    visibleColumnsDeps: [],\n    headerGroups: [],\n    headerGroupsDeps: [],\n    useInstanceBeforeDimensions: [],\n    useInstance: [],\n    prepareRow: [],\n    getTableProps: [defaultGetTableProps],\n    getTableBodyProps: [defaultGetTableBodyProps],\n    getHeaderGroupProps: [defaultGetHeaderGroupProps],\n    getFooterGroupProps: [defaultGetFooterGroupProps],\n    getHeaderProps: [defaultGetHeaderProps],\n    getFooterProps: [defaultGetFooterProps],\n    getRowProps: [defaultGetRowProps],\n    getCellProps: [defaultGetCellProps],\n    useFinalInstance: [],\n  }\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useGetLatest,\n  makePropGetter,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nactions.resetHiddenColumns = 'resetHiddenColumns'\nactions.toggleHideColumn = 'toggleHideColumn'\nactions.setHiddenColumns = 'setHiddenColumns'\nactions.toggleHideAllColumns = 'toggleHideAllColumns'\n\nexport const useColumnVisibility = hooks => {\n  hooks.getToggleHiddenProps = [defaultGetToggleHiddenProps]\n  hooks.getToggleHideAllColumnsProps = [defaultGetToggleHideAllColumnsProps]\n\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n  hooks.headerGroupsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.hiddenColumns,\n  ])\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnVisibility.pluginName = 'useColumnVisibility'\n\nconst defaultGetToggleHiddenProps = (props, { column }) => [\n  props,\n  {\n    onChange: e => {\n      column.toggleHidden(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: column.isVisible,\n    title: 'Toggle Column Visible',\n  },\n]\n\nconst defaultGetToggleHideAllColumnsProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleHideAllColumns(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: !instance.allColumnsHidden && !instance.state.hiddenColumns.length,\n    title: 'Toggle All Columns Hidden',\n    indeterminate:\n      !instance.allColumnsHidden && instance.state.hiddenColumns.length,\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      hiddenColumns: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: instance.initialState.hiddenColumns || [],\n    }\n  }\n\n  if (action.type === actions.toggleHideColumn) {\n    const should =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.includes(action.columnId)\n\n    const hiddenColumns = should\n      ? [...state.hiddenColumns, action.columnId]\n      : state.hiddenColumns.filter(d => d !== action.columnId)\n\n    return {\n      ...state,\n      hiddenColumns,\n    }\n  }\n\n  if (action.type === actions.setHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: functionalUpdate(action.value, state.hiddenColumns),\n    }\n  }\n\n  if (action.type === actions.toggleHideAllColumns) {\n    const shouldAll =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.length\n\n    return {\n      ...state,\n      hiddenColumns: shouldAll ? instance.allColumns.map(d => d.id) : [],\n    }\n  }\n}\n\nfunction useInstanceBeforeDimensions(instance) {\n  const {\n    headers,\n    state: { hiddenColumns },\n  } = instance\n\n  const isMountedRef = React.useRef(false)\n\n  if (!isMountedRef.current) {\n  }\n\n  const handleColumn = (column, parentVisible) => {\n    column.isVisible = parentVisible && !hiddenColumns.includes(column.id)\n\n    let totalVisibleHeaderCount = 0\n\n    if (column.headers && column.headers.length) {\n      column.headers.forEach(\n        subColumn =>\n          (totalVisibleHeaderCount += handleColumn(subColumn, column.isVisible))\n      )\n    } else {\n      totalVisibleHeaderCount = column.isVisible ? 1 : 0\n    }\n\n    column.totalVisibleHeaderCount = totalVisibleHeaderCount\n\n    return totalVisibleHeaderCount\n  }\n\n  let totalVisibleHeaderCount = 0\n\n  headers.forEach(\n    subHeader => (totalVisibleHeaderCount += handleColumn(subHeader, true))\n  )\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    flatHeaders,\n    dispatch,\n    allColumns,\n    getHooks,\n    state: { hiddenColumns },\n    autoResetHiddenColumns = true,\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  const allColumnsHidden = allColumns.length === hiddenColumns.length\n\n  const toggleHideColumn = React.useCallback(\n    (columnId, value) =>\n      dispatch({ type: actions.toggleHideColumn, columnId, value }),\n    [dispatch]\n  )\n\n  const setHiddenColumns = React.useCallback(\n    value => dispatch({ type: actions.setHiddenColumns, value }),\n    [dispatch]\n  )\n\n  const toggleHideAllColumns = React.useCallback(\n    value => dispatch({ type: actions.toggleHideAllColumns, value }),\n    [dispatch]\n  )\n\n  const getToggleHideAllColumnsProps = makePropGetter(\n    getHooks().getToggleHideAllColumnsProps,\n    { instance: getInstance() }\n  )\n\n  flatHeaders.forEach(column => {\n    column.toggleHidden = value => {\n      dispatch({\n        type: actions.toggleHideColumn,\n        columnId: column.id,\n        value,\n      })\n    }\n\n    column.getToggleHiddenProps = makePropGetter(\n      getHooks().getToggleHiddenProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n  })\n\n  const getAutoResetHiddenColumns = useGetLatest(autoResetHiddenColumns)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetHiddenColumns()) {\n      dispatch({ type: actions.resetHiddenColumns })\n    }\n  }, [dispatch, columns])\n\n  Object.assign(instance, {\n    allColumnsHidden,\n    toggleHideColumn,\n    setHiddenColumns,\n    toggleHideAllColumns,\n    getToggleHideAllColumnsProps,\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  linkColumnStructure,\n  flattenColumns,\n  assignColumnAccessor,\n  unpreparedAccessWarning,\n  makeHeaderGroups,\n  decorateColumn,\n} from '../utils'\n\nimport {\n  useGetLatest,\n  reduceHooks,\n  actions,\n  loopHooks,\n  makePropGetter,\n  makeRenderer,\n} from '../publicUtils'\n\nimport makeDefaultPluginHooks from '../makeDefaultPluginHooks'\n\nimport { useColumnVisibility } from './useColumnVisibility'\n\nconst defaultInitialState = {}\nconst defaultColumnInstance = {}\nconst defaultReducer = (state, action, prevState) => state\nconst defaultGetSubRows = (row, index) => row.subRows || []\nconst defaultGetRowId = (row, index, parent) =>\n  `${parent ? [parent.id, index].join('.') : index}`\nconst defaultUseControlledState = d => d\n\nfunction applyDefaults(props) {\n  const {\n    initialState = defaultInitialState,\n    defaultColumn = defaultColumnInstance,\n    getSubRows = defaultGetSubRows,\n    getRowId = defaultGetRowId,\n    stateReducer = defaultReducer,\n    useControlledState = defaultUseControlledState,\n    ...rest\n  } = props\n\n  return {\n    ...rest,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  }\n}\n\nexport const useTable = (props, ...plugins) => {\n  // Apply default props\n  props = applyDefaults(props)\n\n  // Add core plugins\n  plugins = [useColumnVisibility, ...plugins]\n\n  // Create the table instance\n  let instanceRef = React.useRef({})\n\n  // Create a getter for the instance (helps avoid a lot of potential memory leaks)\n  const getInstance = useGetLatest(instanceRef.current)\n\n  // Assign the props, plugins and hooks to the instance\n  Object.assign(getInstance(), {\n    ...props,\n    plugins,\n    hooks: makeDefaultPluginHooks(),\n  })\n\n  // Allow plugins to register hooks as early as possible\n  plugins.filter(Boolean).forEach(plugin => {\n    plugin(getInstance().hooks)\n  })\n\n  // Consume all hooks and make a getter for them\n  const getHooks = useGetLatest(getInstance().hooks)\n  getInstance().getHooks = getHooks\n  delete getInstance().hooks\n\n  // Allow useOptions hooks to modify the options coming into the table\n  Object.assign(\n    getInstance(),\n    reduceHooks(getHooks().useOptions, applyDefaults(props))\n  )\n\n  const {\n    data,\n    columns: userColumns,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  } = getInstance()\n\n  // Setup user reducer ref\n  const getStateReducer = useGetLatest(stateReducer)\n\n  // Build the reducer\n  const reducer = React.useCallback(\n    (state, action) => {\n      // Detect invalid actions\n      if (!action.type) {\n        console.info({ action })\n        throw new Error('Unknown Action 👆')\n      }\n\n      // Reduce the state from all plugin reducers\n      return [\n        ...getHooks().stateReducers,\n        // Allow the user to add their own state reducer(s)\n        ...(Array.isArray(getStateReducer())\n          ? getStateReducer()\n          : [getStateReducer()]),\n      ].reduce(\n        (s, handler) => handler(s, action, state, getInstance()) || s,\n        state\n      )\n    },\n    [getHooks, getStateReducer, getInstance]\n  )\n\n  // Start the reducer\n  const [reducerState, dispatch] = React.useReducer(reducer, undefined, () =>\n    reducer(initialState, { type: actions.init })\n  )\n\n  // Allow the user to control the final state with hooks\n  const state = reduceHooks(\n    [...getHooks().useControlledState, useControlledState],\n    reducerState,\n    { instance: getInstance() }\n  )\n\n  Object.assign(getInstance(), {\n    state,\n    dispatch,\n  })\n\n  // Decorate All the columns\n  const columns = React.useMemo(\n    () =>\n      linkColumnStructure(\n        reduceHooks(getHooks().columns, userColumns, {\n          instance: getInstance(),\n        })\n      ),\n    [\n      getHooks,\n      getInstance,\n      userColumns,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().columnsDeps, [], { instance: getInstance() }),\n    ]\n  )\n  getInstance().columns = columns\n\n  // Get the flat list of all columns and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let allColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().allColumns, flattenColumns(columns), {\n        instance: getInstance(),\n      }).map(assignColumnAccessor),\n    [\n      columns,\n      getHooks,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().allColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().allColumns = allColumns\n\n  // Access the row model using initial columns\n  const [rows, flatRows, rowsById] = React.useMemo(() => {\n    let rows = []\n    let flatRows = []\n    const rowsById = {}\n\n    const allColumnsQueue = [...allColumns]\n\n    while (allColumnsQueue.length) {\n      const column = allColumnsQueue.shift()\n      accessRowsForColumn({\n        data,\n        rows,\n        flatRows,\n        rowsById,\n        column,\n        getRowId,\n        getSubRows,\n        accessValueHooks: getHooks().accessValue,\n        getInstance,\n      })\n    }\n\n    return [rows, flatRows, rowsById]\n  }, [allColumns, data, getRowId, getSubRows, getHooks, getInstance])\n\n  Object.assign(getInstance(), {\n    rows,\n    initialRows: [...rows],\n    flatRows,\n    rowsById,\n    // materializedColumns,\n  })\n\n  loopHooks(getHooks().useInstanceAfterData, getInstance())\n\n  // Get the flat list of all columns AFTER the rows\n  // have been access, and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let visibleColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().visibleColumns, allColumns, {\n        instance: getInstance(),\n      }).map(d => decorateColumn(d, defaultColumn)),\n    [\n      getHooks,\n      allColumns,\n      getInstance,\n      defaultColumn,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().visibleColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n\n  // Combine new visible columns with all columns\n  allColumns = React.useMemo(() => {\n    const columns = [...visibleColumns]\n\n    allColumns.forEach(column => {\n      if (!columns.find(d => d.id === column.id)) {\n        columns.push(column)\n      }\n    })\n\n    return columns\n  }, [allColumns, visibleColumns])\n  getInstance().allColumns = allColumns\n\n  if (process.env.NODE_ENV !== 'production') {\n    const duplicateColumns = allColumns.filter((column, i) => {\n      return allColumns.findIndex(d => d.id === column.id) !== i\n    })\n\n    if (duplicateColumns.length) {\n      console.info(allColumns)\n      throw new Error(\n        `Duplicate columns were found with ids: \"${duplicateColumns\n          .map(d => d.id)\n          .join(', ')}\" in the columns array above`\n      )\n    }\n  }\n\n  // Make the headerGroups\n  const headerGroups = React.useMemo(\n    () =>\n      reduceHooks(\n        getHooks().headerGroups,\n        makeHeaderGroups(visibleColumns, defaultColumn),\n        getInstance()\n      ),\n    [\n      getHooks,\n      visibleColumns,\n      defaultColumn,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().headerGroupsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().headerGroups = headerGroups\n\n  // Get the first level of headers\n  const headers = React.useMemo(\n    () => (headerGroups.length ? headerGroups[0].headers : []),\n    [headerGroups]\n  )\n  getInstance().headers = headers\n\n  // Provide a flat header list for utilities\n  getInstance().flatHeaders = headerGroups.reduce(\n    (all, headerGroup) => [...all, ...headerGroup.headers],\n    []\n  )\n\n  loopHooks(getHooks().useInstanceBeforeDimensions, getInstance())\n\n  // Filter columns down to visible ones\n  const visibleColumnsDep = visibleColumns\n    .filter(d => d.isVisible)\n    .map(d => d.id)\n    .sort()\n    .join('_')\n\n  visibleColumns = React.useMemo(\n    () => visibleColumns.filter(d => d.isVisible),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [visibleColumns, visibleColumnsDep]\n  )\n  getInstance().visibleColumns = visibleColumns\n\n  // Header Visibility is needed by this point\n  const [\n    totalColumnsMinWidth,\n    totalColumnsWidth,\n    totalColumnsMaxWidth,\n  ] = calculateHeaderWidths(headers)\n\n  getInstance().totalColumnsMinWidth = totalColumnsMinWidth\n  getInstance().totalColumnsWidth = totalColumnsWidth\n  getInstance().totalColumnsMaxWidth = totalColumnsMaxWidth\n\n  loopHooks(getHooks().useInstance, getInstance())\n\n  // Each materialized header needs to be assigned a render function and other\n  // prop getter properties here.\n  ;[...getInstance().flatHeaders, ...getInstance().allColumns].forEach(\n    column => {\n      // Give columns/headers rendering power\n      column.render = makeRenderer(getInstance(), column)\n\n      // Give columns/headers a default getHeaderProps\n      column.getHeaderProps = makePropGetter(getHooks().getHeaderProps, {\n        instance: getInstance(),\n        column,\n      })\n\n      // Give columns/headers a default getFooterProps\n      column.getFooterProps = makePropGetter(getHooks().getFooterProps, {\n        instance: getInstance(),\n        column,\n      })\n    }\n  )\n\n  getInstance().headerGroups = React.useMemo(\n    () =>\n      headerGroups.filter((headerGroup, i) => {\n        // Filter out any headers and headerGroups that don't have visible columns\n        headerGroup.headers = headerGroup.headers.filter(column => {\n          const recurse = headers =>\n            headers.filter(column => {\n              if (column.headers) {\n                return recurse(column.headers)\n              }\n              return column.isVisible\n            }).length\n          if (column.headers) {\n            return recurse(column.headers)\n          }\n          return column.isVisible\n        })\n\n        // Give headerGroups getRowProps\n        if (headerGroup.headers.length) {\n          headerGroup.getHeaderGroupProps = makePropGetter(\n            getHooks().getHeaderGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          headerGroup.getFooterGroupProps = makePropGetter(\n            getHooks().getFooterGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          return true\n        }\n\n        return false\n      }),\n    [headerGroups, getInstance, getHooks]\n  )\n\n  getInstance().footerGroups = [...getInstance().headerGroups].reverse()\n\n  // The prepareRow function is absolutely necessary and MUST be called on\n  // any rows the user wishes to be displayed.\n\n  getInstance().prepareRow = React.useCallback(\n    row => {\n      row.getRowProps = makePropGetter(getHooks().getRowProps, {\n        instance: getInstance(),\n        row,\n      })\n\n      // Build the visible cells for each row\n      row.allCells = allColumns.map(column => {\n        const value = row.values[column.id]\n\n        const cell = {\n          column,\n          row,\n          value,\n        }\n\n        // Give each cell a getCellProps base\n        cell.getCellProps = makePropGetter(getHooks().getCellProps, {\n          instance: getInstance(),\n          cell,\n        })\n\n        // Give each cell a renderer function (supports multiple renderers)\n        cell.render = makeRenderer(getInstance(), column, {\n          row,\n          cell,\n          value,\n        })\n\n        return cell\n      })\n\n      row.cells = visibleColumns.map(column =>\n        row.allCells.find(cell => cell.column.id === column.id)\n      )\n\n      // need to apply any row specific hooks (useExpanded requires this)\n      loopHooks(getHooks().prepareRow, row, { instance: getInstance() })\n    },\n    [getHooks, getInstance, allColumns, visibleColumns]\n  )\n\n  getInstance().getTableProps = makePropGetter(getHooks().getTableProps, {\n    instance: getInstance(),\n  })\n\n  getInstance().getTableBodyProps = makePropGetter(\n    getHooks().getTableBodyProps,\n    {\n      instance: getInstance(),\n    }\n  )\n\n  loopHooks(getHooks().useFinalInstance, getInstance())\n\n  return getInstance()\n}\n\nfunction calculateHeaderWidths(headers, left = 0) {\n  let sumTotalMinWidth = 0\n  let sumTotalWidth = 0\n  let sumTotalMaxWidth = 0\n  let sumTotalFlexWidth = 0\n\n  headers.forEach(header => {\n    let { headers: subHeaders } = header\n\n    header.totalLeft = left\n\n    if (subHeaders && subHeaders.length) {\n      const [\n        totalMinWidth,\n        totalWidth,\n        totalMaxWidth,\n        totalFlexWidth,\n      ] = calculateHeaderWidths(subHeaders, left)\n      header.totalMinWidth = totalMinWidth\n      header.totalWidth = totalWidth\n      header.totalMaxWidth = totalMaxWidth\n      header.totalFlexWidth = totalFlexWidth\n    } else {\n      header.totalMinWidth = header.minWidth\n      header.totalWidth = Math.min(\n        Math.max(header.minWidth, header.width),\n        header.maxWidth\n      )\n      header.totalMaxWidth = header.maxWidth\n      header.totalFlexWidth = header.canResize ? header.totalWidth : 0\n    }\n    if (header.isVisible) {\n      left += header.totalWidth\n      sumTotalMinWidth += header.totalMinWidth\n      sumTotalWidth += header.totalWidth\n      sumTotalMaxWidth += header.totalMaxWidth\n      sumTotalFlexWidth += header.totalFlexWidth\n    }\n  })\n\n  return [sumTotalMinWidth, sumTotalWidth, sumTotalMaxWidth, sumTotalFlexWidth]\n}\n\nfunction accessRowsForColumn({\n  data,\n  rows,\n  flatRows,\n  rowsById,\n  column,\n  getRowId,\n  getSubRows,\n  accessValueHooks,\n  getInstance,\n}) {\n  // Access the row's data column-by-column\n  // We do it this way so we can incrementally add materialized\n  // columns after the first pass and avoid excessive looping\n  const accessRow = (originalRow, rowIndex, depth = 0, parent, parentRows) => {\n    // Keep the original reference around\n    const original = originalRow\n\n    const id = getRowId(originalRow, rowIndex, parent)\n\n    let row = rowsById[id]\n\n    // If the row hasn't been created, let's make it\n    if (!row) {\n      row = {\n        id,\n        original,\n        index: rowIndex,\n        depth,\n        cells: [{}], // This is a dummy cell\n      }\n\n      // Override common array functions (and the dummy cell's getCellProps function)\n      // to show an error if it is accessed without calling prepareRow\n      row.cells.map = unpreparedAccessWarning\n      row.cells.filter = unpreparedAccessWarning\n      row.cells.forEach = unpreparedAccessWarning\n      row.cells[0].getCellProps = unpreparedAccessWarning\n\n      // Create the cells and values\n      row.values = {}\n\n      // Push this row into the parentRows array\n      parentRows.push(row)\n      // Keep track of every row in a flat array\n      flatRows.push(row)\n      // Also keep track of every row by its ID\n      rowsById[id] = row\n\n      // Get the original subrows\n      row.originalSubRows = getSubRows(originalRow, rowIndex)\n\n      // Then recursively access them\n      if (row.originalSubRows) {\n        const subRows = []\n        row.originalSubRows.forEach((d, i) =>\n          accessRow(d, i, depth + 1, row, subRows)\n        )\n        // Keep the new subRows array on the row\n        row.subRows = subRows\n      }\n    } else if (row.subRows) {\n      // If the row exists, then it's already been accessed\n      // Keep recursing, but don't worry about passing the\n      // accumlator array (those rows already exist)\n      row.originalSubRows.forEach((d, i) => accessRow(d, i, depth + 1, row))\n    }\n\n    // If the column has an accessor, use it to get a value\n    if (column.accessor) {\n      row.values[column.id] = column.accessor(originalRow, rowIndex, row)\n    }\n\n    // Allow plugins to manipulate the column value\n    row.values[column.id] = reduceHooks(\n      accessValueHooks,\n      row.values[column.id],\n      {\n        row,\n        column,\n        instance: getInstance(),\n      },\n      true\n    )\n  }\n\n  data.forEach((originalRow, rowIndex) =>\n    accessRow(originalRow, rowIndex, 0, undefined, rows)\n  )\n}\n","import React from 'react'\n\nimport { expandRows } from '../utils'\n\nimport {\n  useGetLatest,\n  actions,\n  useMountedLayoutEffect,\n  makePropGetter,\n  ensurePluginOrder,\n} from '../publicUtils'\n\n// Actions\nactions.resetExpanded = 'resetExpanded'\nactions.toggleRowExpanded = 'toggleRowExpanded'\nactions.toggleAllRowsExpanded = 'toggleAllRowsExpanded'\n\nexport const useExpanded = hooks => {\n  hooks.getToggleAllRowsExpandedProps = [defaultGetToggleAllRowsExpandedProps]\n  hooks.getToggleRowExpandedProps = [defaultGetToggleRowExpandedProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseExpanded.pluginName = 'useExpanded'\n\nconst defaultGetToggleAllRowsExpandedProps = (props, { instance }) => [\n  props,\n  {\n    onClick: e => {\n      instance.toggleAllRowsExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle All Rows Expanded',\n  },\n]\n\nconst defaultGetToggleRowExpandedProps = (props, { row }) => [\n  props,\n  {\n    onClick: () => {\n      row.toggleRowExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle Row Expanded',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      expanded: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetExpanded) {\n    return {\n      ...state,\n      expanded: instance.initialState.expanded || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsExpanded) {\n    const { value } = action\n    const { isAllRowsExpanded, rowsById } = instance\n\n    const expandAll = typeof value !== 'undefined' ? value : !isAllRowsExpanded\n\n    if (expandAll) {\n      const expanded = {}\n\n      Object.keys(rowsById).forEach(rowId => {\n        expanded[rowId] = true\n      })\n\n      return {\n        ...state,\n        expanded,\n      }\n    }\n\n    return {\n      ...state,\n      expanded: {},\n    }\n  }\n\n  if (action.type === actions.toggleRowExpanded) {\n    const { id, value: setExpanded } = action\n    const exists = state.expanded[id]\n\n    const shouldExist =\n      typeof setExpanded !== 'undefined' ? setExpanded : !exists\n\n    if (!exists && shouldExist) {\n      return {\n        ...state,\n        expanded: {\n          ...state.expanded,\n          [id]: true,\n        },\n      }\n    } else if (exists && !shouldExist) {\n      const { [id]: _, ...rest } = state.expanded\n      return {\n        ...state,\n        expanded: rest,\n      }\n    } else {\n      return state\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    rowsById,\n    manualExpandedKey = 'expanded',\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    autoResetExpanded = true,\n    getHooks,\n    plugins,\n    state: { expanded },\n    dispatch,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useSortBy', 'useGroupBy', 'usePivotColumns', 'useGlobalFilter'],\n    'useExpanded'\n  )\n\n  const getAutoResetExpanded = useGetLatest(autoResetExpanded)\n\n  let isAllRowsExpanded = Boolean(\n    Object.keys(rowsById).length && Object.keys(expanded).length\n  )\n\n  if (isAllRowsExpanded) {\n    if (Object.keys(rowsById).some(id => !expanded[id])) {\n      isAllRowsExpanded = false\n    }\n  }\n\n  // Bypass any effects from firing when this changes\n  useMountedLayoutEffect(() => {\n    if (getAutoResetExpanded()) {\n      dispatch({ type: actions.resetExpanded })\n    }\n  }, [dispatch, data])\n\n  const toggleRowExpanded = React.useCallback(\n    (id, value) => {\n      dispatch({ type: actions.toggleRowExpanded, id, value })\n    },\n    [dispatch]\n  )\n\n  const toggleAllRowsExpanded = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsExpanded, value }),\n    [dispatch]\n  )\n\n  const expandedRows = React.useMemo(() => {\n    if (paginateExpandedRows) {\n      return expandRows(rows, { manualExpandedKey, expanded, expandSubRows })\n    }\n\n    return rows\n  }, [paginateExpandedRows, rows, manualExpandedKey, expanded, expandSubRows])\n\n  const expandedDepth = React.useMemo(() => findExpandedDepth(expanded), [\n    expanded,\n  ])\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsExpandedProps = makePropGetter(\n    getHooks().getToggleAllRowsExpandedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    preExpandedRows: rows,\n    expandedRows,\n    rows: expandedRows,\n    expandedDepth,\n    isAllRowsExpanded,\n    toggleRowExpanded,\n    toggleAllRowsExpanded,\n    getToggleAllRowsExpandedProps,\n  })\n}\n\nfunction prepareRow(row, { instance: { getHooks }, instance }) {\n  row.toggleRowExpanded = set => instance.toggleRowExpanded(row.id, set)\n\n  row.getToggleRowExpandedProps = makePropGetter(\n    getHooks().getToggleRowExpandedProps,\n    {\n      instance,\n      row,\n    }\n  )\n}\n\nfunction findExpandedDepth(expanded) {\n  let maxDepth = 0\n\n  Object.keys(expanded).forEach(id => {\n    const splitId = id.split('.')\n    maxDepth = Math.max(maxDepth, splitId.length)\n  })\n\n  return maxDepth\n}\n","export const text = (rows, ids, filterValue) => {\n  rows = rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return String(rowValue)\n        .toLowerCase()\n        .includes(String(filterValue).toLowerCase())\n    })\n  })\n  return rows\n}\n\ntext.autoRemove = val => !val\n\nexport const exactText = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase()\n        : true\n    })\n  })\n}\n\nexactText.autoRemove = val => !val\n\nexport const exactTextCase = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue) === String(filterValue)\n        : true\n    })\n  })\n}\n\nexactTextCase.autoRemove = val => !val\n\nexport const includes = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue.includes(filterValue)\n    })\n  })\n}\n\nincludes.autoRemove = val => !val || !val.length\n\nexport const includesAll = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.every(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesAll.autoRemove = val => !val || !val.length\n\nexport const includesSome = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.some(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesSome.autoRemove = val => !val || !val.length\n\nexport const includesValue = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return filterValue.includes(rowValue)\n    })\n  })\n}\n\nincludesValue.autoRemove = val => !val || !val.length\n\nexport const exact = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue === filterValue\n    })\n  })\n}\n\nexact.autoRemove = val => typeof val === 'undefined'\n\nexport const equals = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      // eslint-disable-next-line eqeqeq\n      return rowValue == filterValue\n    })\n  })\n}\n\nequals.autoRemove = val => val == null\n\nexport const between = (rows, ids, filterValue) => {\n  let [min, max] = filterValue || []\n\n  min = typeof min === 'number' ? min : -Infinity\n  max = typeof max === 'number' ? max : Infinity\n\n  if (min > max) {\n    const temp = min\n    min = max\n    max = temp\n  }\n\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue >= min && rowValue <= max\n    })\n  })\n}\n\nbetween.autoRemove = val =>\n  !val || (typeof val[0] !== 'number' && typeof val[1] !== 'number')\n","import React from 'react'\n\nimport {\n  getFirstDefined,\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n} from '../utils'\n\nimport {\n  actions,\n  useGetLatest,\n  functionalUpdate,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetFilters = 'resetFilters'\nactions.setFilter = 'setFilter'\nactions.setAllFilters = 'setAllFilters'\n\nexport const useFilters = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseFilters.pluginName = 'useFilters'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      filters: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetFilters) {\n    return {\n      ...state,\n      filters: instance.initialState.filters || [],\n    }\n  }\n\n  if (action.type === actions.setFilter) {\n    const { columnId, filterValue } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    const column = allColumns.find(d => d.id === columnId)\n\n    if (!column) {\n      throw new Error(\n        `React-Table: Could not find a column with id: ${columnId}`\n      )\n    }\n\n    const filterMethod = getFilterMethod(\n      column.filter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const previousfilter = state.filters.find(d => d.id === columnId)\n\n    const newFilter = functionalUpdate(\n      filterValue,\n      previousfilter && previousfilter.value\n    )\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter, column)) {\n      return {\n        ...state,\n        filters: state.filters.filter(d => d.id !== columnId),\n      }\n    }\n\n    if (previousfilter) {\n      return {\n        ...state,\n        filters: state.filters.map(d => {\n          if (d.id === columnId) {\n            return { id: columnId, value: newFilter }\n          }\n          return d\n        }),\n      }\n    }\n\n    return {\n      ...state,\n      filters: [...state.filters, { id: columnId, value: newFilter }],\n    }\n  }\n\n  if (action.type === actions.setAllFilters) {\n    const { filters } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    return {\n      ...state,\n      // Filter out undefined values\n      filters: functionalUpdate(filters, state.filters).filter(filter => {\n        const column = allColumns.find(d => d.id === filter.id)\n        const filterMethod = getFilterMethod(\n          column.filter,\n          userFilterTypes || {},\n          filterTypes\n        )\n\n        if (\n          shouldAutoRemoveFilter(filterMethod.autoRemove, filter.value, column)\n        ) {\n          return false\n        }\n        return true\n      }),\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    manualFilters,\n    defaultCanFilter = false,\n    disableFilters,\n    state: { filters },\n    dispatch,\n    autoResetFilters = true,\n  } = instance\n\n  const setFilter = React.useCallback(\n    (columnId, filterValue) => {\n      dispatch({ type: actions.setFilter, columnId, filterValue })\n    },\n    [dispatch]\n  )\n\n  const setAllFilters = React.useCallback(\n    filters => {\n      dispatch({\n        type: actions.setAllFilters,\n        filters,\n      })\n    },\n    [dispatch]\n  )\n\n  allColumns.forEach(column => {\n    const {\n      id,\n      accessor,\n      defaultCanFilter: columnDefaultCanFilter,\n      disableFilters: columnDisableFilters,\n    } = column\n\n    // Determine if a column is filterable\n    column.canFilter = accessor\n      ? getFirstDefined(\n          columnDisableFilters === true ? false : undefined,\n          disableFilters === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(columnDefaultCanFilter, defaultCanFilter, false)\n\n    // Provide the column a way of updating the filter value\n    column.setFilter = val => setFilter(column.id, val)\n\n    // Provide the current filter value to the column for\n    // convenience\n    const found = filters.find(d => d.id === id)\n    column.filterValue = found && found.value\n  })\n\n  const [\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualFilters || !filters.length) {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    // Filters top level and nested rows\n    const filterRows = (rows, depth = 0) => {\n      let filteredRows = rows\n\n      filteredRows = filters.reduce(\n        (filteredSoFar, { id: columnId, value: filterValue }) => {\n          // Find the filters column\n          const column = allColumns.find(d => d.id === columnId)\n\n          if (!column) {\n            return filteredSoFar\n          }\n\n          if (depth === 0) {\n            column.preFilteredRows = filteredSoFar\n          }\n\n          const filterMethod = getFilterMethod(\n            column.filter,\n            userFilterTypes || {},\n            filterTypes\n          )\n\n          if (!filterMethod) {\n            console.warn(\n              `Could not find a valid 'column.filter' for column with the ID: ${column.id}.`\n            )\n            return filteredSoFar\n          }\n\n          // Pass the rows, id, filterValue and column to the filterMethod\n          // to get the filtered rows back\n          column.filteredRows = filterMethod(\n            filteredSoFar,\n            [columnId],\n            filterValue\n          )\n\n          return column.filteredRows\n        },\n        rows\n      )\n\n      // Apply the filter to any subRows\n      // We technically could do this recursively in the above loop,\n      // but that would severely hinder the API for the user, since they\n      // would be required to do that recursion in some scenarios\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n        if (!row.subRows) {\n          return\n        }\n\n        row.subRows =\n          row.subRows && row.subRows.length > 0\n            ? filterRows(row.subRows, depth + 1)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualFilters,\n    filters,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userFilterTypes,\n  ])\n\n  React.useMemo(() => {\n    // Now that each filtered column has it's partially filtered rows,\n    // lets assign the final filtered rows to all of the other columns\n    const nonFilteredColumns = allColumns.filter(\n      column => !filters.find(d => d.id === column.id)\n    )\n\n    // This essentially enables faceted filter options to be built easily\n    // using every column's preFilteredRows value\n    nonFilteredColumns.forEach(column => {\n      column.preFilteredRows = filteredRows\n      column.filteredRows = filteredRows\n    })\n  }, [filteredRows, filters, allColumns])\n\n  const getAutoResetFilters = useGetLatest(autoResetFilters)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetFilters()) {\n      dispatch({ type: actions.resetFilters })\n    }\n  }, [dispatch, manualFilters ? null : data])\n\n  Object.assign(instance, {\n    preFilteredRows: rows,\n    preFilteredFlatRows: flatRows,\n    preFilteredRowsById: rowsById,\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n    rows: filteredRows,\n    flatRows: filteredFlatRows,\n    rowsById: filteredRowsById,\n    setFilter,\n    setAllFilters,\n  })\n}\n","import React from 'react'\n\nimport {\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n  getFirstDefined,\n} from '../utils'\n\nimport {\n  actions,\n  useMountedLayoutEffect,\n  functionalUpdate,\n  useGetLatest,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetGlobalFilter = 'resetGlobalFilter'\nactions.setGlobalFilter = 'setGlobalFilter'\n\nexport const useGlobalFilter = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseGlobalFilter.pluginName = 'useGlobalFilter'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.resetGlobalFilter) {\n    return {\n      ...state,\n      globalFilter: instance.initialState.globalFilter || undefined,\n    }\n  }\n\n  if (action.type === actions.setGlobalFilter) {\n    const { filterValue } = action\n    const { userFilterTypes } = instance\n\n    const filterMethod = getFilterMethod(\n      instance.globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const newFilter = functionalUpdate(filterValue, state.globalFilter)\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter)) {\n      const { globalFilter, ...stateWithoutGlobalFilter } = state\n      return stateWithoutGlobalFilter\n    }\n\n    return {\n      ...state,\n      globalFilter: newFilter,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    globalFilter,\n    manualGlobalFilter,\n    state: { globalFilter: globalFilterValue },\n    dispatch,\n    autoResetGlobalFilter = true,\n    disableGlobalFilter,\n  } = instance\n\n  const setGlobalFilter = React.useCallback(\n    filterValue => {\n      dispatch({ type: actions.setGlobalFilter, filterValue })\n    },\n    [dispatch]\n  )\n\n  // TODO: Create a filter cache for incremental high speed multi-filtering\n  // This gets pretty complicated pretty fast, since you have to maintain a\n  // cache for each row group (top-level rows, and each row's recursive subrows)\n  // This would make multi-filtering a lot faster though. Too far?\n\n  const [\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualGlobalFilter || typeof globalFilterValue === 'undefined') {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    const filterMethod = getFilterMethod(\n      globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    if (!filterMethod) {\n      console.warn(`Could not find a valid 'globalFilter' option.`)\n      return rows\n    }\n\n    allColumns.forEach(column => {\n      const { disableGlobalFilter: columnDisableGlobalFilter } = column\n\n      column.canFilter = getFirstDefined(\n        columnDisableGlobalFilter === true ? false : undefined,\n        disableGlobalFilter === true ? false : undefined,\n        true\n      )\n    })\n\n    const filterableColumns = allColumns.filter(c => c.canFilter === true)\n\n    // Filters top level and nested rows\n    const filterRows = filteredRows => {\n      filteredRows = filterMethod(\n        filteredRows,\n        filterableColumns.map(d => d.id),\n        globalFilterValue\n      )\n\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n\n        row.subRows =\n          row.subRows && row.subRows.length\n            ? filterRows(row.subRows)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualGlobalFilter,\n    globalFilterValue,\n    globalFilter,\n    userFilterTypes,\n    allColumns,\n    rows,\n    flatRows,\n    rowsById,\n    disableGlobalFilter,\n  ])\n\n  const getAutoResetGlobalFilter = useGetLatest(autoResetGlobalFilter)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGlobalFilter()) {\n      dispatch({ type: actions.resetGlobalFilter })\n    }\n  }, [dispatch, manualGlobalFilter ? null : data])\n\n  Object.assign(instance, {\n    preGlobalFilteredRows: rows,\n    preGlobalFilteredFlatRows: flatRows,\n    preGlobalFilteredRowsById: rowsById,\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n    rows: globalFilteredRows,\n    flatRows: globalFilteredFlatRows,\n    rowsById: globalFilteredRowsById,\n    setGlobalFilter,\n    disableGlobalFilter,\n  })\n}\n","export function sum(values, aggregatedValues) {\n  // It's faster to just add the aggregations together instead of\n  // process leaf nodes individually\n  return aggregatedValues.reduce(\n    (sum, next) => sum + (typeof next === 'number' ? next : 0),\n    0\n  )\n}\n\nexport function min(values) {\n  let min = 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n    }\n  })\n\n  return min\n}\n\nexport function max(values) {\n  let max = 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      max = Math.max(max, value)\n    }\n  })\n\n  return max\n}\n\nexport function minMax(values) {\n  let min = 0\n  let max = 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n      max = Math.max(max, value)\n    }\n  })\n\n  return `${min}..${max}`\n}\n\nexport function average(values) {\n  return sum(null, values) / values.length\n}\n\nexport function median(values) {\n  if (!values.length) {\n    return null\n  }\n\n  const mid = Math.floor(values.length / 2)\n  const nums = [...values].sort((a, b) => a - b)\n  return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2\n}\n\nexport function unique(values) {\n  return Array.from(new Set(values).values())\n}\n\nexport function uniqueCount(values) {\n  return new Set(values).size\n}\n\nexport function count(values) {\n  return values.length\n}\n","import React from 'react'\n\nimport * as aggregations from '../aggregations'\n\nimport { getFirstDefined, flattenBy } from '../utils'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst emptyArray = []\nconst emptyObject = {}\n\n// Actions\nactions.resetGroupBy = 'resetGroupBy'\nactions.setGroupBy = 'setGroupBy'\nactions.toggleGroupBy = 'toggleGroupBy'\n\nexport const useGroupBy = hooks => {\n  hooks.getGroupByToggleProps = [defaultGetGroupByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.groupBy,\n  ])\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseGroupBy.pluginName = 'useGroupBy'\n\nconst defaultGetGroupByToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canGroupBy\n      ? e => {\n          e.persist()\n          header.toggleGroupBy()\n        }\n      : undefined,\n    style: {\n      cursor: header.canGroupBy ? 'pointer' : undefined,\n    },\n    title: 'Toggle GroupBy',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      groupBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetGroupBy) {\n    return {\n      ...state,\n      groupBy: instance.initialState.groupBy || [],\n    }\n  }\n\n  if (action.type === actions.setGroupBy) {\n    const { value } = action\n    return {\n      ...state,\n      groupBy: value,\n    }\n  }\n\n  if (action.type === actions.toggleGroupBy) {\n    const { columnId, value: setGroupBy } = action\n\n    const resolvedGroupBy =\n      typeof setGroupBy !== 'undefined'\n        ? setGroupBy\n        : !state.groupBy.includes(columnId)\n\n    if (resolvedGroupBy) {\n      return {\n        ...state,\n        groupBy: [...state.groupBy, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      groupBy: state.groupBy.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { groupBy },\n    },\n  }\n) {\n  // Sort grouped columns to the start of the column list\n  // before the headers are built\n\n  const groupByColumns = groupBy\n    .map(g => columns.find(col => col.id === g))\n    .filter(Boolean)\n\n  const nonGroupByColumns = columns.filter(col => !groupBy.includes(col.id))\n\n  columns = [...groupByColumns, ...nonGroupByColumns]\n\n  columns.forEach(column => {\n    column.isGrouped = groupBy.includes(column.id)\n    column.groupedIndex = groupBy.indexOf(column.id)\n  })\n\n  return columns\n}\n\nconst defaultUserAggregations = {}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    flatHeaders,\n    groupByFn = defaultGroupByFn,\n    manualGroupBy,\n    aggregations: userAggregations = defaultUserAggregations,\n    plugins,\n    state: { groupBy },\n    dispatch,\n    autoResetGroupBy = true,\n    disableGroupBy,\n    defaultCanGroupBy,\n    getHooks,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useColumnOrder', 'useFilters'], 'useGroupBy')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultGroupBy: defaultColumnGroupBy,\n      disableGroupBy: columnDisableGroupBy,\n    } = column\n\n    column.canGroupBy = accessor\n      ? getFirstDefined(\n          column.canGroupBy,\n          columnDisableGroupBy === true ? false : undefined,\n          disableGroupBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canGroupBy,\n          defaultColumnGroupBy,\n          defaultCanGroupBy,\n          false\n        )\n\n    if (column.canGroupBy) {\n      column.toggleGroupBy = () => instance.toggleGroupBy(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const toggleGroupBy = React.useCallback(\n    (columnId, value) => {\n      dispatch({ type: actions.toggleGroupBy, columnId, value })\n    },\n    [dispatch]\n  )\n\n  const setGroupBy = React.useCallback(\n    value => {\n      dispatch({ type: actions.setGroupBy, value })\n    },\n    [dispatch]\n  )\n\n  flatHeaders.forEach(header => {\n    header.getGroupByToggleProps = makePropGetter(\n      getHooks().getGroupByToggleProps,\n      { instance: getInstance(), header }\n    )\n  })\n\n  const [\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n  ] = React.useMemo(() => {\n    if (manualGroupBy || !groupBy.length) {\n      return [\n        rows,\n        flatRows,\n        rowsById,\n        emptyArray,\n        emptyObject,\n        flatRows,\n        rowsById,\n      ]\n    }\n\n    // Ensure that the list of filtered columns exist\n    const existingGroupBy = groupBy.filter(g =>\n      allColumns.find(col => col.id === g)\n    )\n\n    // Find the columns that can or are aggregating\n    // Uses each column to aggregate rows into a single value\n    const aggregateRowsToValues = (leafRows, groupedRows, depth) => {\n      const values = {}\n\n      allColumns.forEach(column => {\n        // Don't aggregate columns that are in the groupBy\n        if (existingGroupBy.includes(column.id)) {\n          values[column.id] = groupedRows[0]\n            ? groupedRows[0].values[column.id]\n            : null\n          return\n        }\n\n        // Get the columnValues to aggregate\n        const groupedValues = groupedRows.map(row => row.values[column.id])\n\n        // Get the columnValues to aggregate\n        const leafValues = leafRows.map(row => {\n          let columnValue = row.values[column.id]\n\n          if (!depth && column.aggregateValue) {\n            const aggregateValueFn =\n              typeof column.aggregateValue === 'function'\n                ? column.aggregateValue\n                : userAggregations[column.aggregateValue] ||\n                  aggregations[column.aggregateValue]\n\n            if (!aggregateValueFn) {\n              console.info({ column })\n              throw new Error(\n                `React Table: Invalid column.aggregateValue option for column listed above`\n              )\n            }\n\n            columnValue = aggregateValueFn(columnValue, row, column)\n          }\n          return columnValue\n        })\n\n        // Aggregate the values\n        let aggregateFn =\n          typeof column.aggregate === 'function'\n            ? column.aggregate\n            : userAggregations[column.aggregate] ||\n              aggregations[column.aggregate]\n\n        if (aggregateFn) {\n          values[column.id] = aggregateFn(leafValues, groupedValues)\n        } else if (column.aggregate) {\n          console.info({ column })\n          throw new Error(\n            `React Table: Invalid column.aggregate option for column listed above`\n          )\n        } else {\n          values[column.id] = null\n        }\n      })\n\n      return values\n    }\n\n    let groupedFlatRows = []\n    const groupedRowsById = {}\n    const onlyGroupedFlatRows = []\n    const onlyGroupedRowsById = {}\n    const nonGroupedFlatRows = []\n    const nonGroupedRowsById = {}\n\n    // Recursively group the data\n    const groupUpRecursively = (rows, depth = 0, parentId) => {\n      // This is the last level, just return the rows\n      if (depth === existingGroupBy.length) {\n        return rows\n      }\n\n      const columnId = existingGroupBy[depth]\n\n      // Group the rows together for this level\n      let rowGroupsMap = groupByFn(rows, columnId)\n\n      // Peform aggregations for each group\n      const aggregatedGroupedRows = Object.entries(rowGroupsMap).map(\n        ([groupByVal, groupedRows], index) => {\n          let id = `${columnId}:${groupByVal}`\n          id = parentId ? `${parentId}>${id}` : id\n\n          // First, Recurse to group sub rows before aggregation\n          const subRows = groupUpRecursively(groupedRows, depth + 1, id)\n\n          // Flatten the leaf rows of the rows in this group\n          const leafRows = depth\n            ? flattenBy(groupedRows, 'leafRows')\n            : groupedRows\n\n          const values = aggregateRowsToValues(leafRows, groupedRows, depth)\n\n          const row = {\n            id,\n            isGrouped: true,\n            groupByID: columnId,\n            groupByVal,\n            values,\n            subRows,\n            leafRows,\n            depth,\n            index,\n          }\n\n          subRows.forEach(subRow => {\n            groupedFlatRows.push(subRow)\n            groupedRowsById[subRow.id] = subRow\n            if (subRow.isGrouped) {\n              onlyGroupedFlatRows.push(subRow)\n              onlyGroupedRowsById[subRow.id] = subRow\n            } else {\n              nonGroupedFlatRows.push(subRow)\n              nonGroupedRowsById[subRow.id] = subRow\n            }\n          })\n\n          return row\n        }\n      )\n\n      return aggregatedGroupedRows\n    }\n\n    const groupedRows = groupUpRecursively(rows)\n\n    groupedRows.forEach(subRow => {\n      groupedFlatRows.push(subRow)\n      groupedRowsById[subRow.id] = subRow\n      if (subRow.isGrouped) {\n        onlyGroupedFlatRows.push(subRow)\n        onlyGroupedRowsById[subRow.id] = subRow\n      } else {\n        nonGroupedFlatRows.push(subRow)\n        nonGroupedRowsById[subRow.id] = subRow\n      }\n    })\n\n    // Assign the new data\n    return [\n      groupedRows,\n      groupedFlatRows,\n      groupedRowsById,\n      onlyGroupedFlatRows,\n      onlyGroupedRowsById,\n      nonGroupedFlatRows,\n      nonGroupedRowsById,\n    ]\n  }, [\n    manualGroupBy,\n    groupBy,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userAggregations,\n    groupByFn,\n  ])\n\n  const getAutoResetGroupBy = useGetLatest(autoResetGroupBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGroupBy()) {\n      dispatch({ type: actions.resetGroupBy })\n    }\n  }, [dispatch, manualGroupBy ? null : data])\n\n  Object.assign(instance, {\n    preGroupedRows: rows,\n    preGroupedFlatRow: flatRows,\n    preGroupedRowsById: rowsById,\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n    rows: groupedRows,\n    flatRows: groupedFlatRows,\n    rowsById: groupedRowsById,\n    toggleGroupBy,\n    setGroupBy,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the groupBy and the pivot cell for the row\n    cell.isGrouped = cell.column.isGrouped && cell.column.id === row.groupByID\n    // Placeholder cells are any columns in the groupBy that are not grouped\n    cell.isPlaceholder = !cell.isGrouped && cell.column.isGrouped\n    // Aggregated cells are not grouped, not repeated, but still have subRows\n    cell.isAggregated =\n      !cell.isGrouped && !cell.isPlaceholder && row.subRows?.length\n  })\n}\n\nexport function defaultGroupByFn(rows, columnId) {\n  return rows.reduce((prev, row, i) => {\n    // TODO: Might want to implement a key serializer here so\n    // irregular column values can still be grouped if needed?\n    const resKey = `${row.values[columnId]}`\n    prev[resKey] = Array.isArray(prev[resKey]) ? prev[resKey] : []\n    prev[resKey].push(row)\n    return prev\n  }, {})\n}\n","const reSplitAlphaNumeric = /([0-9]+)/gm\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nexport const alphanumeric = (rowA, rowB, columnId) => {\n  let a = getRowValueByColumnID(rowA, columnId)\n  let b = getRowValueByColumnID(rowB, columnId)\n  // Force to strings (or \"\" for unsupported types)\n  a = toString(a)\n  b = toString(b)\n\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  a = a.split(reSplitAlphaNumeric).filter(Boolean)\n  b = b.split(reSplitAlphaNumeric).filter(Boolean)\n\n  // While\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    const an = parseInt(aa, 10)\n    const bn = parseInt(bb, 10)\n\n    const combo = [an, bn].sort()\n\n    // Both are string\n    if (isNaN(combo[0])) {\n      if (aa > bb) {\n        return 1\n      }\n      if (bb > aa) {\n        return -1\n      }\n      continue\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1])) {\n      return isNaN(an) ? -1 : 1\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1\n    }\n    if (bn > an) {\n      return -1\n    }\n  }\n\n  return a.length - b.length\n}\n\nexport function datetime(rowA, rowB, columnId) {\n  let a = getRowValueByColumnID(rowA, columnId)\n  let b = getRowValueByColumnID(rowB, columnId)\n\n  a = a.getTime()\n  b = b.getTime()\n\n  return compareBasic(a, b)\n}\n\nexport function basic(rowA, rowB, columnId) {\n  let a = getRowValueByColumnID(rowA, columnId)\n  let b = getRowValueByColumnID(rowB, columnId)\n\n  return compareBasic(a, b)\n}\n\n// Utils\n\nfunction compareBasic(a, b) {\n  return a === b ? 0 : a > b ? 1 : -1\n}\n\nfunction getRowValueByColumnID(row, columnId) {\n  return row.values[columnId]\n}\n\nfunction toString(a) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return ''\n    }\n    return String(a)\n  }\n  if (typeof a === 'string') {\n    return a\n  }\n  return ''\n}\n","import React from 'react'\n\nimport {\n  actions,\n  ensurePluginOrder,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, isFunction } from '../utils'\n\nimport * as sortTypes from '../sortTypes'\n\n// Actions\nactions.resetSortBy = 'resetSortBy'\nactions.setSortBy = 'setSortBy'\nactions.toggleSortBy = 'toggleSortBy'\nactions.clearSortBy = 'clearSortBy'\n\ndefaultColumn.sortType = 'alphanumeric'\ndefaultColumn.sortDescFirst = false\n\nexport const useSortBy = hooks => {\n  hooks.getSortByToggleProps = [defaultGetSortByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseSortBy.pluginName = 'useSortBy'\n\nconst defaultGetSortByToggleProps = (props, { instance, column }) => {\n  const { isMultiSortEvent = e => e.shiftKey } = instance\n\n  return [\n    props,\n    {\n      onClick: column.canSort\n        ? e => {\n            e.persist()\n            column.toggleSortBy(\n              undefined,\n              !instance.disableMultiSort && isMultiSortEvent(e)\n            )\n          }\n        : undefined,\n      style: {\n        cursor: column.canSort ? 'pointer' : undefined,\n      },\n      title: column.canSort ? 'Toggle SortBy' : undefined,\n    },\n  ]\n}\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      sortBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSortBy) {\n    return {\n      ...state,\n      sortBy: instance.initialState.sortBy || [],\n    }\n  }\n\n  if (action.type === actions.clearSortBy) {\n    const { sortBy } = state\n    const newSortBy = sortBy.filter(d => d.id !== action.columnId)\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n\n  if (action.type === actions.setSortBy) {\n    const { sortBy } = action\n    return {\n      ...state,\n      sortBy,\n    }\n  }\n\n  if (action.type === actions.toggleSortBy) {\n    const { columnId, desc, multi } = action\n\n    const {\n      allColumns,\n      disableMultiSort,\n      disableSortRemove,\n      disableMultiRemove,\n      maxMultiSortColCount = Number.MAX_SAFE_INTEGER,\n    } = instance\n\n    const { sortBy } = state\n\n    // Find the column for this columnId\n    const column = allColumns.find(d => d.id === columnId)\n    const { sortDescFirst } = column\n\n    // Find any existing sortBy for this column\n    const existingSortBy = sortBy.find(d => d.id === columnId)\n    const existingIndex = sortBy.findIndex(d => d.id === columnId)\n    const hasDescDefined = typeof desc !== 'undefined' && desc !== null\n\n    let newSortBy = []\n\n    // What should we do with this sort action?\n    let sortAction\n\n    if (!disableMultiSort && multi) {\n      if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'add'\n      }\n    } else {\n      // Normal mode\n      if (existingIndex !== sortBy.length - 1 || sortBy.length !== 1) {\n        sortAction = 'replace'\n      } else if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'replace'\n      }\n    }\n\n    // Handle toggle states that will remove the sortBy\n    if (\n      sortAction === 'toggle' && // Must be toggling\n      !disableSortRemove && // If disableSortRemove, disable in general\n      !hasDescDefined && // Must not be setting desc\n      (multi ? !disableMultiRemove : true) && // If multi, don't allow if disableMultiRemove\n      ((existingSortBy && // Finally, detect if it should indeed be removed\n        existingSortBy.desc &&\n        !sortDescFirst) ||\n        (!existingSortBy.desc && sortDescFirst))\n    ) {\n      sortAction = 'remove'\n    }\n\n    if (sortAction === 'replace') {\n      newSortBy = [\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n    } else if (sortAction === 'add') {\n      newSortBy = [\n        ...sortBy,\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n      // Take latest n columns\n      newSortBy.splice(0, newSortBy.length - maxMultiSortColCount)\n    } else if (sortAction === 'toggle') {\n      // This flips (or sets) the\n      newSortBy = sortBy.map(d => {\n        if (d.id === columnId) {\n          return {\n            ...d,\n            desc: hasDescDefined ? desc : !existingSortBy.desc,\n          }\n        }\n        return d\n      })\n    } else if (sortAction === 'remove') {\n      newSortBy = sortBy.filter(d => d.id !== columnId)\n    }\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn = defaultOrderByFn,\n    sortTypes: userSortTypes,\n    manualSortBy,\n    defaultCanSort,\n    disableSortBy,\n    flatHeaders,\n    state: { sortBy },\n    dispatch,\n    plugins,\n    getHooks,\n    autoResetSortBy = true,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGlobalFilter', 'useGroupBy', 'usePivotColumns'],\n    'useSortBy'\n  )\n\n  const setSortBy = React.useCallback(\n    sortBy => {\n      dispatch({ type: actions.setSortBy, sortBy })\n    },\n    [dispatch]\n  )\n\n  // Updates sorting based on a columnId, desc flag and multi flag\n  const toggleSortBy = React.useCallback(\n    (columnId, desc, multi) => {\n      dispatch({ type: actions.toggleSortBy, columnId, desc, multi })\n    },\n    [dispatch]\n  )\n\n  // use reference to avoid memory leak in #1608\n  const getInstance = useGetLatest(instance)\n\n  // Add the getSortByToggleProps method to columns and headers\n  flatHeaders.forEach(column => {\n    const {\n      accessor,\n      canSort: defaultColumnCanSort,\n      disableSortBy: columnDisableSortBy,\n      id,\n    } = column\n\n    const canSort = accessor\n      ? getFirstDefined(\n          columnDisableSortBy === true ? false : undefined,\n          disableSortBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(defaultCanSort, defaultColumnCanSort, false)\n\n    column.canSort = canSort\n\n    if (column.canSort) {\n      column.toggleSortBy = (desc, multi) =>\n        toggleSortBy(column.id, desc, multi)\n\n      column.clearSortBy = () => {\n        dispatch({ type: actions.clearSortBy, columnId: column.id })\n      }\n    }\n\n    column.getSortByToggleProps = makePropGetter(\n      getHooks().getSortByToggleProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n\n    const columnSort = sortBy.find(d => d.id === id)\n    column.isSorted = !!columnSort\n    column.sortedIndex = sortBy.findIndex(d => d.id === id)\n    column.isSortedDesc = column.isSorted ? columnSort.desc : undefined\n  })\n\n  const [sortedRows, sortedFlatRows] = React.useMemo(() => {\n    if (manualSortBy || !sortBy.length) {\n      return [rows, flatRows]\n    }\n\n    const sortedFlatRows = []\n\n    // Filter out sortBys that correspond to non existing columns\n    const availableSortBy = sortBy.filter(sort =>\n      allColumns.find(col => col.id === sort.id)\n    )\n\n    const sortData = rows => {\n      // Use the orderByFn to compose multiple sortBy's together.\n      // This will also perform a stable sorting using the row index\n      // if needed.\n      const sortedData = orderByFn(\n        rows,\n        availableSortBy.map(sort => {\n          // Support custom sorting methods for each column\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (!column) {\n            throw new Error(\n              `React-Table: Could not find a column with id: ${sort.id} while sorting`\n            )\n          }\n\n          const { sortType } = column\n\n          // Look up sortBy functions in this order:\n          // column function\n          // column string lookup on user sortType\n          // column string lookup on built-in sortType\n          // default function\n          // default string lookup on user sortType\n          // default string lookup on built-in sortType\n          const sortMethod =\n            isFunction(sortType) ||\n            (userSortTypes || {})[sortType] ||\n            sortTypes[sortType]\n\n          if (!sortMethod) {\n            throw new Error(\n              `React-Table: Could not find a valid sortType of '${sortType}' for column '${sort.id}'.`\n            )\n          }\n\n          // Return the correct sortFn.\n          // This function should always return in ascending order\n          return (a, b) => sortMethod(a, b, sort.id, sort.desc)\n        }),\n        // Map the directions\n        availableSortBy.map(sort => {\n          // Detect and use the sortInverted option\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (column && column.sortInverted) {\n            return sort.desc\n          }\n\n          return !sort.desc\n        })\n      )\n\n      // If there are sub-rows, sort them\n      sortedData.forEach(row => {\n        sortedFlatRows.push(row)\n        if (!row.subRows) {\n          return\n        } else if (row.subRows.length === 1) {\n          sortedFlatRows.push(row.subRows[0])\n          return\n        }\n        row.subRows = sortData(row.subRows)\n      })\n\n      return sortedData\n    }\n\n    return [sortData(rows), sortedFlatRows]\n  }, [\n    manualSortBy,\n    sortBy,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn,\n    userSortTypes,\n  ])\n\n  const getAutoResetSortBy = useGetLatest(autoResetSortBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSortBy()) {\n      dispatch({ type: actions.resetSortBy })\n    }\n  }, [manualSortBy ? null : data])\n\n  Object.assign(instance, {\n    preSortedRows: rows,\n    preSortedFlatRows: flatRows,\n    sortedRows,\n    sortedFlatRows,\n    rows: sortedRows,\n    flatRows: sortedFlatRows,\n    setSortBy,\n    toggleSortBy,\n  })\n}\n\nexport function defaultOrderByFn(arr, funcs, dirs) {\n  return [...arr].sort((rowA, rowB) => {\n    for (let i = 0; i < funcs.length; i += 1) {\n      const sortFn = funcs[i]\n      const desc = dirs[i] === false || dirs[i] === 'desc'\n      const sortInt = sortFn(rowA, rowB)\n      if (sortInt !== 0) {\n        return desc ? -sortInt : sortInt\n      }\n    }\n    return dirs[0] ? rowA.index - rowB.index : rowB.index - rowA.index\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  actions,\n  ensurePluginOrder,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { expandRows } from '../utils'\n\nconst pluginName = 'usePagination'\n\n// Actions\nactions.resetPage = 'resetPage'\nactions.gotoPage = 'gotoPage'\nactions.setPageSize = 'setPageSize'\n\nexport const usePagination = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nusePagination.pluginName = pluginName\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pageSize: 10,\n      pageIndex: 0,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPage) {\n    return {\n      ...state,\n      pageIndex: instance.initialState.pageIndex || 0,\n    }\n  }\n\n  if (action.type === actions.gotoPage) {\n    const { pageCount, page } = instance\n    const newPageIndex = functionalUpdate(action.pageIndex, state.pageIndex)\n    let canNavigate = false\n\n    if (newPageIndex > state.pageIndex) {\n      // next page\n      canNavigate =\n        pageCount === -1\n          ? page.length >= state.pageSize\n          : newPageIndex <= pageCount\n    } else if (newPageIndex < state.pageIndex) {\n      // prev page\n      canNavigate = newPageIndex > -1\n    }\n\n    if (!canNavigate) {\n      return state\n    }\n\n    return {\n      ...state,\n      pageIndex: newPageIndex,\n    }\n  }\n\n  if (action.type === actions.setPageSize) {\n    const { pageSize } = action\n    const topRowIndex = state.pageSize * state.pageIndex\n    const pageIndex = Math.floor(topRowIndex / pageSize)\n\n    return {\n      ...state,\n      pageIndex,\n      pageSize,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    rows,\n    autoResetPage = true,\n    manualExpandedKey = 'expanded',\n    plugins,\n    pageCount: userPageCount,\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    state: {\n      pageSize,\n      pageIndex,\n      expanded,\n      globalFilter,\n      filters,\n      groupBy,\n      sortBy,\n    },\n    dispatch,\n    data,\n    manualPagination,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useGlobalFilter', 'useFilters', 'useGroupBy', 'useSortBy', 'useExpanded'],\n    'usePagination'\n  )\n\n  const getAutoResetPage = useGetLatest(autoResetPage)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPage()) {\n      dispatch({ type: actions.resetPage })\n    }\n  }, [\n    dispatch,\n    manualPagination ? null : data,\n    globalFilter,\n    filters,\n    groupBy,\n    sortBy,\n  ])\n\n  const pageCount = manualPagination\n    ? userPageCount\n    : Math.ceil(rows.length / pageSize)\n\n  const pageOptions = React.useMemo(\n    () =>\n      pageCount > 0\n        ? [...new Array(pageCount)].fill(null).map((d, i) => i)\n        : [],\n    [pageCount]\n  )\n\n  const page = React.useMemo(() => {\n    let page\n\n    if (manualPagination) {\n      page = rows\n    } else {\n      const pageStart = pageSize * pageIndex\n      const pageEnd = pageStart + pageSize\n\n      page = rows.slice(pageStart, pageEnd)\n    }\n\n    if (paginateExpandedRows) {\n      return page\n    }\n\n    return expandRows(page, { manualExpandedKey, expanded, expandSubRows })\n  }, [\n    expandSubRows,\n    expanded,\n    manualExpandedKey,\n    manualPagination,\n    pageIndex,\n    pageSize,\n    paginateExpandedRows,\n    rows,\n  ])\n\n  const canPreviousPage = pageIndex > 0\n  const canNextPage =\n    pageCount === -1 ? page.length >= pageSize : pageIndex < pageCount - 1\n\n  const gotoPage = React.useCallback(\n    pageIndex => {\n      dispatch({ type: actions.gotoPage, pageIndex })\n    },\n    [dispatch]\n  )\n\n  const previousPage = React.useCallback(() => {\n    return gotoPage(old => old - 1)\n  }, [gotoPage])\n\n  const nextPage = React.useCallback(() => {\n    return gotoPage(old => old + 1)\n  }, [gotoPage])\n\n  const setPageSize = React.useCallback(\n    pageSize => {\n      dispatch({ type: actions.setPageSize, pageSize })\n    },\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    pageOptions,\n    pageCount,\n    page,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    previousPage,\n    nextPage,\n    setPageSize,\n  })\n}\n","/* istanbul ignore file */\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { flattenColumns, getFirstDefined } from '../utils'\n\n// Actions\nactions.resetPivot = 'resetPivot'\nactions.togglePivot = 'togglePivot'\n\nexport const _UNSTABLE_usePivotColumns = hooks => {\n  hooks.getPivotToggleProps = [defaultGetPivotToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceAfterData.push(useInstanceAfterData)\n  hooks.allColumns.push(allColumns)\n  hooks.accessValue.push(accessValue)\n  hooks.materializedColumns.push(materializedColumns)\n  hooks.materializedColumnsDeps.push(materializedColumnsDeps)\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\n_UNSTABLE_usePivotColumns.pluginName = 'usePivotColumns'\n\nconst defaultPivotColumns = []\n\nconst defaultGetPivotToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canPivot\n      ? e => {\n          e.persist()\n          header.togglePivot()\n        }\n      : undefined,\n    style: {\n      cursor: header.canPivot ? 'pointer' : undefined,\n    },\n    title: 'Toggle Pivot',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pivotColumns: defaultPivotColumns,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPivot) {\n    return {\n      ...state,\n      pivotColumns: instance.initialState.pivotColumns || defaultPivotColumns,\n    }\n  }\n\n  if (action.type === actions.togglePivot) {\n    const { columnId, value: setPivot } = action\n\n    const resolvedPivot =\n      typeof setPivot !== 'undefined'\n        ? setPivot\n        : !state.pivotColumns.includes(columnId)\n\n    if (resolvedPivot) {\n      return {\n        ...state,\n        pivotColumns: [...state.pivotColumns, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      pivotColumns: state.pivotColumns.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction useInstanceAfterData(instance) {\n  instance.allColumns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n  })\n}\n\nfunction allColumns(columns, { instance }) {\n  columns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n    column.uniqueValues = new Set()\n  })\n  return columns\n}\n\nfunction accessValue(value, { column }) {\n  if (column.uniqueValues && typeof value !== 'undefined') {\n    column.uniqueValues.add(value)\n  }\n  return value\n}\n\nfunction materializedColumns(materialized, { instance }) {\n  const { allColumns, state } = instance\n\n  if (!state.pivotColumns.length || !state.groupBy || !state.groupBy.length) {\n    return materialized\n  }\n\n  const pivotColumns = state.pivotColumns\n    .map(id => allColumns.find(d => d.id === id))\n    .filter(Boolean)\n\n  const sourceColumns = allColumns.filter(\n    d =>\n      !d.isPivotSource &&\n      !state.groupBy.includes(d.id) &&\n      !state.pivotColumns.includes(d.id)\n  )\n\n  const buildPivotColumns = (depth = 0, parent, pivotFilters = []) => {\n    const pivotColumn = pivotColumns[depth]\n\n    if (!pivotColumn) {\n      return sourceColumns.map(sourceColumn => {\n        // TODO: We could offer support here for renesting pivoted\n        // columns inside copies of their header groups. For now,\n        // that seems like it would be (1) overkill on nesting, considering\n        // you already get nesting for every pivot level and (2)\n        // really hard. :)\n\n        return {\n          ...sourceColumn,\n          canPivot: false,\n          isPivoted: true,\n          parent,\n          depth: depth,\n          id: `${parent ? `${parent.id}.${sourceColumn.id}` : sourceColumn.id}`,\n          accessor: (originalRow, i, row) => {\n            if (pivotFilters.every(filter => filter(row))) {\n              return row.values[sourceColumn.id]\n            }\n          },\n        }\n      })\n    }\n\n    const uniqueValues = Array.from(pivotColumn.uniqueValues).sort()\n\n    return uniqueValues.map(uniqueValue => {\n      const columnGroup = {\n        ...pivotColumn,\n        Header:\n          pivotColumn.PivotHeader || typeof pivotColumn.header === 'string'\n            ? `${pivotColumn.Header}: ${uniqueValue}`\n            : uniqueValue,\n        isPivotGroup: true,\n        parent,\n        depth,\n        id: parent\n          ? `${parent.id}.${pivotColumn.id}.${uniqueValue}`\n          : `${pivotColumn.id}.${uniqueValue}`,\n        pivotValue: uniqueValue,\n      }\n\n      columnGroup.columns = buildPivotColumns(depth + 1, columnGroup, [\n        ...pivotFilters,\n        row => row.values[pivotColumn.id] === uniqueValue,\n      ])\n\n      return columnGroup\n    })\n  }\n\n  const newMaterialized = flattenColumns(buildPivotColumns())\n\n  return [...materialized, ...newMaterialized]\n}\n\nfunction materializedColumnsDeps(\n  deps,\n  {\n    instance: {\n      state: { pivotColumns, groupBy },\n    },\n  }\n) {\n  return [...deps, pivotColumns, groupBy]\n}\n\nfunction visibleColumns(visibleColumns, { instance: { state } }) {\n  visibleColumns = visibleColumns.filter(d => !d.isPivotSource)\n\n  if (state.pivotColumns.length && state.groupBy && state.groupBy.length) {\n    visibleColumns = visibleColumns.filter(\n      column => column.isGrouped || column.isPivoted\n    )\n  }\n\n  return visibleColumns\n}\n\nfunction visibleColumnsDeps(deps, { instance }) {\n  return [...deps, instance.state.pivotColumns, instance.state.groupBy]\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    allColumns,\n    flatHeaders,\n    // pivotFn = defaultPivotFn,\n    // manualPivot,\n    getHooks,\n    plugins,\n    dispatch,\n    autoResetPivot = true,\n    manaulPivot,\n    disablePivot,\n    defaultCanPivot,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useGroupBy'], 'usePivotColumns')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultPivot: defaultColumnPivot,\n      disablePivot: columnDisablePivot,\n    } = column\n\n    column.canPivot = accessor\n      ? getFirstDefined(\n          column.canPivot,\n          columnDisablePivot === true ? false : undefined,\n          disablePivot === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canPivot,\n          defaultColumnPivot,\n          defaultCanPivot,\n          false\n        )\n\n    if (column.canPivot) {\n      column.togglePivot = () => instance.togglePivot(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const togglePivot = (columnId, value) => {\n    dispatch({ type: actions.togglePivot, columnId, value })\n  }\n\n  flatHeaders.forEach(header => {\n    header.getPivotToggleProps = makePropGetter(\n      getHooks().getPivotToggleProps,\n      {\n        instance: getInstance(),\n        header,\n      }\n    )\n  })\n\n  const getAutoResetPivot = useGetLatest(autoResetPivot)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPivot()) {\n      dispatch({ type: actions.resetPivot })\n    }\n  }, [dispatch, manaulPivot ? null : columns])\n\n  Object.assign(instance, {\n    togglePivot,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the pivotColumns and the pivot cell for the row\n    cell.isPivoted = cell.column.isPivoted\n  })\n}\n","import React from 'react'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nconst pluginName = 'useRowSelect'\n\n// Actions\nactions.resetSelectedRows = 'resetSelectedRows'\nactions.toggleAllRowsSelected = 'toggleAllRowsSelected'\nactions.toggleRowSelected = 'toggleRowSelected'\nactions.toggleAllPageRowsSelected = 'toggleAllPageRowsSelected'\n\nexport const useRowSelect = hooks => {\n  hooks.getToggleRowSelectedProps = [defaultGetToggleRowSelectedProps]\n  hooks.getToggleAllRowsSelectedProps = [defaultGetToggleAllRowsSelectedProps]\n  hooks.getToggleAllPageRowsSelectedProps = [\n    defaultGetToggleAllPageRowsSelectedProps,\n  ]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowSelect.pluginName = pluginName\n\nconst defaultGetToggleRowSelectedProps = (props, { instance, row }) => {\n  const { manualRowSelectedKey = 'isSelected' } = instance\n  let checked = false\n\n  if (row.original && row.original[manualRowSelectedKey]) {\n    checked = true\n  } else {\n    checked = row.isSelected\n  }\n\n  return [\n    props,\n    {\n      onChange: e => {\n        row.toggleRowSelected(e.target.checked)\n      },\n      style: {\n        cursor: 'pointer',\n      },\n      checked,\n      title: 'Toggle Row Selected',\n      indeterminate: row.isSomeSelected,\n    },\n  ]\n}\n\nconst defaultGetToggleAllRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleAllRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllRowsSelected,\n    title: 'Toggle All Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllRowsSelected &&\n        Object.keys(instance.state.selectedRowIds).length\n    ),\n  },\n]\n\nconst defaultGetToggleAllPageRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange(e) {\n      instance.toggleAllPageRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllPageRowsSelected,\n    title: 'Toggle All Current Page Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllPageRowsSelected &&\n        instance.page.some(({ id }) => instance.state.selectedRowIds[id])\n    ),\n  },\n]\n\n// eslint-disable-next-line max-params\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      selectedRowIds: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSelectedRows) {\n    return {\n      ...state,\n      selectedRowIds: instance.initialState.selectedRowIds || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      isAllRowsSelected,\n      rowsById,\n      nonGroupedRowsById = rowsById,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllRowsSelected\n\n    // Only remove/add the rows that are visible on the screen\n    //  Leave all the other rows that are selected alone.\n    const selectedRowIds = Object.assign({}, state.selectedRowIds)\n\n    if (selectAll) {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        selectedRowIds[rowId] = true\n      })\n    } else {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        delete selectedRowIds[rowId]\n      })\n    }\n\n    return {\n      ...state,\n      selectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleRowSelected) {\n    const { id, value: setSelected } = action\n    const { rowsById, selectSubRows = true, getSubRows } = instance\n\n    // Join the ids of deep rows\n    // to make a key, then manage all of the keys\n    // in a flat object\n    const row = rowsById[id]\n    const isSelected = row.isSelected\n    const shouldExist =\n      typeof setSelected !== 'undefined' ? setSelected : !isSelected\n\n    if (isSelected === shouldExist) {\n      return state\n    }\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (shouldExist) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    handleRowById(id)\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleAllPageRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      page,\n      rowsById,\n      selectSubRows = true,\n      isAllPageRowsSelected,\n      getSubRows,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllPageRowsSelected\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (selectAll) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    page.forEach(row => handleRowById(row.id))\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n  return state\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    getHooks,\n    plugins,\n    rowsById,\n    nonGroupedRowsById = rowsById,\n    autoResetSelectedRows = true,\n    state: { selectedRowIds },\n    selectSubRows = true,\n    dispatch,\n    page,\n    getSubRows,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGroupBy', 'useSortBy', 'useExpanded', 'usePagination'],\n    'useRowSelect'\n  )\n\n  const selectedFlatRows = React.useMemo(() => {\n    const selectedFlatRows = []\n\n    rows.forEach(row => {\n      const isSelected = selectSubRows\n        ? getRowIsSelected(row, selectedRowIds, getSubRows)\n        : !!selectedRowIds[row.id]\n      row.isSelected = !!isSelected\n      row.isSomeSelected = isSelected === null\n\n      if (isSelected) {\n        selectedFlatRows.push(row)\n      }\n    })\n\n    return selectedFlatRows\n  }, [rows, selectSubRows, selectedRowIds, getSubRows])\n\n  let isAllRowsSelected = Boolean(\n    Object.keys(nonGroupedRowsById).length && Object.keys(selectedRowIds).length\n  )\n\n  let isAllPageRowsSelected = isAllRowsSelected\n\n  if (isAllRowsSelected) {\n    if (Object.keys(nonGroupedRowsById).some(id => !selectedRowIds[id])) {\n      isAllRowsSelected = false\n    }\n  }\n\n  if (!isAllRowsSelected) {\n    if (page && page.length && page.some(({ id }) => !selectedRowIds[id])) {\n      isAllPageRowsSelected = false\n    }\n  }\n\n  const getAutoResetSelectedRows = useGetLatest(autoResetSelectedRows)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSelectedRows()) {\n      dispatch({ type: actions.resetSelectedRows })\n    }\n  }, [dispatch, data])\n\n  const toggleAllRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleAllPageRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllPageRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleRowSelected = React.useCallback(\n    (id, value) => dispatch({ type: actions.toggleRowSelected, id, value }),\n    [dispatch]\n  )\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  const getToggleAllPageRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllPageRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    selectedFlatRows,\n    isAllRowsSelected,\n    isAllPageRowsSelected,\n    toggleRowSelected,\n    toggleAllRowsSelected,\n    getToggleAllRowsSelectedProps,\n    getToggleAllPageRowsSelectedProps,\n    toggleAllPageRowsSelected,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  row.toggleRowSelected = set => instance.toggleRowSelected(row.id, set)\n\n  row.getToggleRowSelectedProps = makePropGetter(\n    instance.getHooks().getToggleRowSelectedProps,\n    { instance: instance, row }\n  )\n}\n\nfunction getRowIsSelected(row, selectedRowIds, getSubRows) {\n  if (selectedRowIds[row.id]) {\n    return true\n  }\n\n  const subRows = getSubRows(row)\n\n  if (subRows && subRows.length) {\n    let allChildrenSelected = true\n    let someSelected = false\n\n    subRows.forEach(subRow => {\n      // Bail out early if we know both of these\n      if (someSelected && !allChildrenSelected) {\n        return\n      }\n\n      if (getRowIsSelected(subRow, selectedRowIds, getSubRows)) {\n        someSelected = true\n      } else {\n        allChildrenSelected = false\n      }\n    })\n    return allChildrenSelected ? true : someSelected ? null : false\n  }\n\n  return false\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst defaultInitialRowStateAccessor = originalRow => ({})\nconst defaultInitialCellStateAccessor = originalRow => ({})\n\n// Actions\nactions.setRowState = 'setRowState'\nactions.setCellState = 'setCellState'\nactions.resetRowState = 'resetRowState'\n\nexport const useRowState = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowState.pluginName = 'useRowState'\n\nfunction reducer(state, action, previousState, instance) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    rowsById,\n  } = instance\n\n  if (action.type === actions.init) {\n    return {\n      rowState: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetRowState) {\n    return {\n      ...state,\n      rowState: instance.initialState.rowState || {},\n    }\n  }\n\n  if (action.type === actions.setRowState) {\n    const { rowId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId].original)\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: functionalUpdate(value, oldRowState),\n      },\n    }\n  }\n\n  if (action.type === actions.setCellState) {\n    const { rowId, columnId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId].original)\n\n    const oldCellState =\n      typeof oldRowState?.cellState?.[columnId] !== 'undefined'\n        ? oldRowState.cellState[columnId]\n        : initialCellStateAccessor(rowsById[rowId].original)\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: {\n          ...oldRowState,\n          cellState: {\n            ...(oldRowState.cellState || {}),\n            [columnId]: functionalUpdate(value, oldCellState),\n          },\n        },\n      },\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const { autoResetRowState = true, data, dispatch } = instance\n\n  const setRowState = React.useCallback(\n    (rowId, value) =>\n      dispatch({\n        type: actions.setRowState,\n        rowId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const setCellState = React.useCallback(\n    (rowId, columnId, value) =>\n      dispatch({\n        type: actions.setCellState,\n        rowId,\n        columnId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const getAutoResetRowState = useGetLatest(autoResetRowState)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetRowState()) {\n      dispatch({ type: actions.resetRowState })\n    }\n  }, [data])\n\n  Object.assign(instance, {\n    setRowState,\n    setCellState,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    state: { rowState },\n  } = instance\n\n  if (row.original) {\n    row.state =\n      typeof rowState[row.id] !== 'undefined'\n        ? rowState[row.id]\n        : initialRowStateAccessor(row.original)\n\n    row.setState = updater => {\n      return instance.setRowState(row.id, updater)\n    }\n\n    row.cells.forEach(cell => {\n      if (!row.state.cellState) {\n        row.state.cellState = {}\n      }\n\n      cell.state =\n        typeof row.state.cellState[cell.column.id] !== 'undefined'\n          ? row.state.cellState[cell.column.id]\n          : initialCellStateAccessor(row.original)\n\n      cell.setState = updater => {\n        return instance.setCellState(row.id, cell.column.id, updater)\n      }\n    })\n  }\n}\n","import React from 'react'\n\nimport { functionalUpdate, actions } from '../publicUtils'\n\n// Actions\nactions.resetColumnOrder = 'resetColumnOrder'\nactions.setColumnOrder = 'setColumnOrder'\n\nexport const useColumnOrder = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => {\n    return [...deps, instance.state.columnOrder]\n  })\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnOrder.pluginName = 'useColumnOrder'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      columnOrder: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetColumnOrder) {\n    return {\n      ...state,\n      columnOrder: instance.initialState.columnOrder || [],\n    }\n  }\n\n  if (action.type === actions.setColumnOrder) {\n    return {\n      ...state,\n      columnOrder: functionalUpdate(action.columnOrder, state.columnOrder),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { columnOrder },\n    },\n  }\n) {\n  // If there is no order, return the normal columns\n  if (!columnOrder || !columnOrder.length) {\n    return columns\n  }\n\n  const columnOrderCopy = [...columnOrder]\n\n  // If there is an order, make a copy of the columns\n  const columnsCopy = [...columns]\n\n  // And make a new ordered array of the columns\n  const columnsInOrder = []\n\n  // Loop over the columns and place them in order into the new array\n  while (columnsCopy.length && columnOrderCopy.length) {\n    const targetColumnId = columnOrderCopy.shift()\n    const foundIndex = columnsCopy.findIndex(d => d.id === targetColumnId)\n    if (foundIndex > -1) {\n      columnsInOrder.push(columnsCopy.splice(foundIndex, 1)[0])\n    }\n  }\n\n  // If there are any columns left, add them to the end\n  return [...columnsInOrder, ...columnsCopy]\n}\n\nfunction useInstance(instance) {\n  const { dispatch } = instance\n\n  instance.setColumnOrder = React.useCallback(\n    columnOrder => {\n      return dispatch({ type: actions.setColumnOrder, columnOrder })\n    },\n    [dispatch]\n  )\n}\n","import React from 'react'\n\nimport {\n  actions,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, passiveEventSupported } from '../utils'\n\n// Default Column\ndefaultColumn.canResize = true\n\n// Actions\nactions.columnStartResizing = 'columnStartResizing'\nactions.columnResizing = 'columnResizing'\nactions.columnDoneResizing = 'columnDoneResizing'\nactions.resetResize = 'resetResize'\n\nexport const useResizeColumns = hooks => {\n  hooks.getResizerProps = [defaultGetResizerProps]\n  hooks.getHeaderProps.push({\n    style: {\n      position: 'relative',\n    },\n  })\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n}\n\nconst defaultGetResizerProps = (props, { instance, header }) => {\n  const { dispatch } = instance\n\n  const onResizeStart = (e, header) => {\n    let isTouchEvent = false\n    if (e.type === 'touchstart') {\n      // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n      if (e.touches && e.touches.length > 1) {\n        return\n      }\n      isTouchEvent = true\n    }\n    const headersToResize = getLeafHeaders(header)\n    const headerIdWidths = headersToResize.map(d => [d.id, d.totalWidth])\n\n    const clientX = isTouchEvent ? Math.round(e.touches[0].clientX) : e.clientX\n\n    const dispatchMove = clientXPos => {\n      dispatch({ type: actions.columnResizing, clientX: clientXPos })\n    }\n    const dispatchEnd = () => dispatch({ type: actions.columnDoneResizing })\n\n    const handlersAndEvents = {\n      mouse: {\n        moveEvent: 'mousemove',\n        moveHandler: e => dispatchMove(e.clientX),\n        upEvent: 'mouseup',\n        upHandler: e => {\n          document.removeEventListener(\n            'mousemove',\n            handlersAndEvents.mouse.moveHandler\n          )\n          document.removeEventListener(\n            'mouseup',\n            handlersAndEvents.mouse.upHandler\n          )\n          dispatchEnd()\n        },\n      },\n      touch: {\n        moveEvent: 'touchmove',\n        moveHandler: e => {\n          if (e.cancelable) {\n            e.preventDefault()\n            e.stopPropagation()\n          }\n          dispatchMove(e.touches[0].clientX)\n          return false\n        },\n        upEvent: 'touchend',\n        upHandler: e => {\n          document.removeEventListener(\n            handlersAndEvents.touch.moveEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          document.removeEventListener(\n            handlersAndEvents.touch.upEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          dispatchEnd()\n        },\n      },\n    }\n\n    const events = isTouchEvent\n      ? handlersAndEvents.touch\n      : handlersAndEvents.mouse\n    const passiveIfSupported = passiveEventSupported()\n      ? { passive: false }\n      : false\n    document.addEventListener(\n      events.moveEvent,\n      events.moveHandler,\n      passiveIfSupported\n    )\n    document.addEventListener(\n      events.upEvent,\n      events.upHandler,\n      passiveIfSupported\n    )\n\n    dispatch({\n      type: actions.columnStartResizing,\n      columnId: header.id,\n      columnWidth: header.totalWidth,\n      headerIdWidths,\n      clientX,\n    })\n  }\n\n  return [\n    props,\n    {\n      onMouseDown: e => e.persist() || onResizeStart(e, header),\n      onTouchStart: e => e.persist() || onResizeStart(e, header),\n      style: {\n        cursor: 'ew-resize',\n      },\n      draggable: false,\n      role: 'separator',\n    },\n  ]\n}\n\nuseResizeColumns.pluginName = 'useResizeColumns'\n\nfunction reducer(state, action) {\n  if (action.type === actions.init) {\n    return {\n      columnResizing: {\n        columnWidths: {},\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetResize) {\n    return {\n      ...state,\n      columnResizing: {\n        columnWidths: {},\n      },\n    }\n  }\n\n  if (action.type === actions.columnStartResizing) {\n    const { clientX, columnId, columnWidth, headerIdWidths } = action\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: clientX,\n        headerIdWidths,\n        columnWidth,\n        isResizingColumn: columnId,\n      },\n    }\n  }\n\n  if (action.type === actions.columnResizing) {\n    const { clientX } = action\n    const { startX, columnWidth, headerIdWidths } = state.columnResizing\n\n    const deltaX = clientX - startX\n    const percentageDeltaX = deltaX / columnWidth\n\n    const newColumnWidths = {}\n\n    headerIdWidths.forEach(([headerId, headerWidth]) => {\n      newColumnWidths[headerId] = Math.max(\n        headerWidth + headerWidth * percentageDeltaX,\n        0\n      )\n    })\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        columnWidths: {\n          ...state.columnResizing.columnWidths,\n          ...newColumnWidths,\n        },\n      },\n    }\n  }\n\n  if (action.type === actions.columnDoneResizing) {\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: null,\n        isResizingColumn: null,\n      },\n    }\n  }\n}\n\nconst useInstanceBeforeDimensions = instance => {\n  const {\n    flatHeaders,\n    disableResizing,\n    getHooks,\n    state: { columnResizing },\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  flatHeaders.forEach(header => {\n    const canResize = getFirstDefined(\n      header.disableResizing === true ? false : undefined,\n      disableResizing === true ? false : undefined,\n      true\n    )\n\n    header.canResize = canResize\n    header.width =\n      columnResizing.columnWidths[header.id] ||\n      header.originalWidth ||\n      header.width\n    header.isResizing = columnResizing.isResizingColumn === header.id\n\n    if (canResize) {\n      header.getResizerProps = makePropGetter(getHooks().getResizerProps, {\n        instance: getInstance(),\n        header,\n      })\n    }\n  })\n}\n\nfunction useInstance(instance) {\n  const { plugins, dispatch, autoResetResize = true, columns } = instance\n\n  ensurePluginOrder(plugins, ['useAbsoluteLayout'], 'useResizeColumns')\n\n  const getAutoResetResize = useGetLatest(autoResetResize)\n  useMountedLayoutEffect(() => {\n    if (getAutoResetResize()) {\n      dispatch({ type: actions.resetResize })\n    }\n  }, [columns])\n\n  const resetResizing = React.useCallback(\n    () => dispatch({ type: actions.resetResize }),\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    resetResizing,\n  })\n}\n\nfunction getLeafHeaders(header) {\n  const leafHeaders = []\n  const recurseHeader = header => {\n    if (header.columns && header.columns.length) {\n      header.columns.map(recurseHeader)\n    }\n    leafHeaders.push(header)\n  }\n  recurseHeader(header)\n  return leafHeaders\n}\n","const cellStyles = {\n  position: 'absolute',\n  top: 0,\n}\n\nexport const useAbsoluteLayout = hooks => {\n  hooks.getTableBodyProps.push(getRowStyles)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${cell.column.totalLeft}px`,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseAbsoluteLayout.pluginName = 'useAbsoluteLayout'\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      position: 'relative',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n","const cellStyles = {\n  display: 'inline-block',\n  boxSizing: 'border-box',\n}\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nexport const useBlockLayout = hooks => {\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseBlockLayout.pluginName = 'useBlockLayout'\n","export function useFlexLayout(hooks) {\n  hooks.getTableProps.push(getTableProps)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n  hooks.getHeaderProps.push(getHeaderProps)\n  hooks.getCellProps.push(getCellProps)\n  hooks.getFooterProps.push(getFooterProps)\n}\n\nuseFlexLayout.pluginName = 'useFlexLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      minWidth: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      flex: '1 0 auto',\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n\nconst getCellProps = (props, { cell }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: `${cell.column.totalFlexWidth} 0 auto`,\n      minWidth: `${cell.column.totalMinWidth}px`,\n      width: `${cell.column.totalWidth}px`,\n    },\n  },\n]\n\nconst getFooterProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}